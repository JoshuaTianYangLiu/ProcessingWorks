int currentWindow=1;
int sineWaveT=0;
PGraphics foreGround;
int mainMenuBoxes=150;
PImage bg;

//character
int h=0, s=100, b=100;
int colourSquareX=400, colourSquareY=150;//Moving the colour square
int characterX=0, characterY=0;  //Character position
color characterHairOne=color(152, 104, 88);
color characterHairTwo=color(104, 72, 56);
color characterPantsOne=color(99, 173, 242);
color characterPantsTwo=color(72, 104, 176);
color characterPantsThree=color(56, 104, 176);
boolean chosenHair=true;
boolean hasWentToCharacter=false;
//Play
int playerMap[][]=new int[25][13];
boolean hasControl=true;
char lastMove='d';
int moveCharacterFrame=0;
int moveCharacterMoves=0;
int characterGridX=0;
int characterGridY=0;
PImage lockedBox, unlockedBox, note, paperNote, lockedWall, iceFloor;
String noteMap[][]=new String[25][13];
int lockPassKey[][]=new int[25][13];
int finalValue[]=new int[4];
int curValue[] = new int[4];
int scrollX[] = new int[4];
int distance[] = new int[4];
int colourSection=0;
int shackleY=0;
int numComb=0;
int playerBar[]=new int[4];
int numOfItems=0;
int itemMap[][]=new int[25][13];
boolean hasMenuOpen=false;
String noteMessage;
boolean hasUnlocked;
int onLevel=9;
int startSec, startMin, startHr;
String numToWord[]={"One", "Two", "Three", "Four", "Five"};
int secondElasped=second()-startSec;
int minuteElasped=minute()-startMin;
int hourElasped=hour()-startHr;
boolean spaceBeenPressed=false;
//Room One
PImage roomOneGrid, roomOneGridPuzzle;
boolean rOHasMenuOpen=false;
//Room Two
PImage roomTwoShape, roomTwoColourPuzzle, roomTwoCodePuzzle;
//0 is splash screen
//1 is main menu
//2 is play
//3 is levels
//4 is character
//5 is instructions
//6 is quit
//7 is win screen
//8 is roomOne
//9 is roomTwo
//https://www.youtube.com/watch?v=j-ZLDEnhT3Q 12:37
void setup() {
  size(800, 500);
  smooth();
  foreGround=createGraphics(800, 500);
  bg = loadImage("splashScreenBG.jpg");
  lockedBox=loadImage("LockedBox.png");
  unlockedBox=loadImage("UnlockedBox.png");
  note = loadImage("Note.png");
  paperNote=loadImage("NotePopup.png");
  lockedWall=loadImage("LockedEntry.png");
  iceFloor=loadImage("IceFloor.png");

  roomOneGrid=loadImage("RoomOnePuzzleGrid.png");
  roomOneGridPuzzle=loadImage("RoomOnePuzzleGridPuzzle.png");
  roomTwoShape=loadImage("RoomTwoShapes.png");
  roomTwoColourPuzzle=loadImage("RoomTwoColourPuzzle.png");
  roomTwoCodePuzzle=loadImage("RoomTwoCodePuzzle.png");
}
void draw() {
  if (currentWindow==0) {
    splashScreen();
    if (currentWindow==1) {
      //setup code for mainMenu
    }
  } else if (currentWindow==1) {
    mainMenu();
    if (currentWindow==2) {
      strokeWeight(1);
      size(800, 500);
    } else if (currentWindow==3) {
    } else if (currentWindow==4) {
      strokeWeight(1);
      background(200);
      stroke(200);
      fill(200);
      rect(colourSquareX, colourSquareY, 255, 255);
      colorMode(HSB);
      drawColourSquare();
    } else if (currentWindow==5) {
    } else if (currentWindow==6) {
    }
  } else if (currentWindow==2) {
    playGame();
    if (currentWindow>=8&&currentWindow<=12) {  //Change this if needed
      resetRoom();
      background(100);
      characterX=32;
      characterY=32;
      startSec=second();
      startMin=minute();
      startHr=hour();
    }
    if (currentWindow==8)setupRoomOne();
    else if (currentWindow==9)setupRoomTwo();
    else if(currentWindow==10)setupRoomThree();
    //else if(currentWindow==11)setupRoomFour();
    //else if(currentWindow==12)setupRoomFive();
    //Most likely this will switch to multiple methods needing multiple values for each room
  } else if (currentWindow==3) {
  } else if (currentWindow==4) {
    colourPicker();
    //This method leaves in RGB
  } else if (currentWindow==5) {
  } else if (currentWindow==6) {
  } else if (currentWindow==7) {
    background(100, 200, 100);
    winScreen();
    if (currentWindow>=8&&currentWindow<=12) {  //Change this if needed
      resetRoom();
      background(100);
      characterX=32;
      characterY=32;
      startSec=second();
      startMin=minute();
      startHr=hour();
    }
    if (currentWindow==8)setupRoomOne();
    else if (currentWindow==9)setupRoomTwo();
    else if(currentWindow==10)setupRoomThree();
    //else if(currentWindow==11)setupRoomFour();
    //else if(currentWindow==12)setupRoomFive();
  } else if (currentWindow==8) {
    roomOne();
    //Room One
  } else if (currentWindow==9) {
    roomTwo();
  }else if(currentWindow==10){
    roomThree();
  }
  //println(mouseX/32, mouseY/32);
}
void winScreen() {
  textSize(80);
  textAlign(CENTER);
  text("Room "+numToWord[onLevel-8]+"\nCompleted!", 400, 100);
  textSize(30);
  text("Time: "+hourElasped+"h "+minuteElasped+"m "+secondElasped+"s", 400, 250);
  textAlign(LEFT);
  text("Main Menu", 50, 400);
  text("Next Level", 600, 400);
  noFill();
  strokeWeight(5);
  if (mouseX>=45&&mouseX<=210&&mouseY>=365&&mouseY<=415) {
    rect(45, 365, 165, 50);
    if (mousePressed) {
      currentWindow=1;
      onLevel++;
    }
  } else if (mouseX>=595&&mouseX<=745&&mouseY>=365&&mouseY<=415) {
    rect(595, 365, 150, 50);
    if (mousePressed)currentWindow=++onLevel;
  }
  strokeWeight(1);
}
void roomThree(){
  drawMap();
  timeElasped();
  moveCharacter();
  guiPopup();
  drawRoomThree();
  winPlatform();
}
void setupRoomThree(){
  //0 floor
  //1 wall
  //2 locked box
  //3 unlocked box
  //4 note
  //5 locked wall
  //6 ice floor
  //7 win platform
  //itemMap
  //lockPassKey
  //noteMap
  //playerMap
  playerMap[5][7]=1;
}
void drawRoomThree(){
  
}
void roomTwo() {
  drawMap();
  timeElasped();
  image(roomTwoShape, 32, 224);
  moveCharacter();
  guiPopup();
  drawRoomTwo();
  winPlatform();
}
void setupRoomTwo() {
  for (int i=0; i<25; i++)playerMap[i][6]=1;
  for (int i=1; i<12; i++) {
    playerMap[8][i]=1;
    playerMap[16][i]=1;
  }
  playerMap[4][3]=4;
  noteMap[4][3]="Welcome to your second room,\n"
    +"in here we'll go back to the basics.\n"
    +"1, 2, 3, 8, pineapple?";
  playerMap[8][3]=5;
  lockPassKey[8][3]=5694;
  itemMap[8][3]=0;
  playerMap[12][3]=4;
  noteMap[12][3]="Hidden in plain sight";
  playerMap[12][6]=5;
  lockPassKey[12][6]=7219;
  itemMap[12][6]=0;
  playerMap[12][9]=4;
  noteMap[12][9]="Story idea,\n\n"
    +"Till recently, Issac's artistic naming gave\n"
    +"lasting echos. Since questions ultimately\n"
    +"arose relating equally. People eventually\n"
    +"named the artist Galvin on November.\n"
    +"Carrying its reasons can leave evidence";
  playerMap[16][9]=5;
  lockPassKey[16][9]=7557;
  itemMap[16][9]=0;
  playerMap[20][9]=4;
  playerMap[20][6]=5;
  lockPassKey[20][6]=5259;
  itemMap[20][6]=0;
  for (int i=17; i<24; i++) {
    for (int j=1; j<6; j++)playerMap[i][j]=6;
  }
  playerMap[20][4]=1;
  playerMap[23][5]=1;
  playerMap[22][2]=1;
  playerMap[21][1]=1;
  playerMap[17][4]=1;
  playerMap[18][2]=7;
  playerMap[18][5]=1;
}
void drawRoomTwo() {
  int squareX=characterX/32;
  int squareY=characterY/32;
  //println(squareX,squareY);
  if (lastMove=='w')squareY--;
  else if (lastMove=='a')squareX--;
  else if (lastMove=='s')squareY++;
  else if (lastMove=='d')squareX++;
  squareX=max(0, squareX);
  squareY=max(0, squareY);
  if (playerMap[squareX][squareY]==4) {
    if (squareX==4&&squareY==3) {
      if (hasMenuOpen) {
        image(roomTwoColourPuzzle, 0, 0);
      }
    } else if (squareX==12&&squareY==3) {
      if (hasMenuOpen) {
        println(" --   --        --");
        println("   |    |    | |   |");
        println("      --        --");
        println("   | |       |     |");
        println("      --        --");
      }
    } else if (squareX==20&&squareY==9) {
      if (hasMenuOpen) {
        image(roomTwoCodePuzzle, 0, 0);
      }
    }
  }
}
void roomOne() {
  drawMap();
  timeElasped();
  moveCharacter();
  guiPopup();
  drawRoomOne();
  winPlatform();
}
void setupRoomOne() {
  for (int i=8; i<24; i++) {
    for (int j=1; j<6; j++)playerMap[i][j]=6;
  }
  for (int i=14; i<24; i++) {
    for (int j=6; j<12; j++)playerMap[i][j]=6;
  }
  for (int i=0; i<7; i++)playerMap[7][i]=1;
  for (int i=0; i<14; i++)playerMap[i][6]=1;
  playerMap[5][1]=4;
  noteMap[5][1]="Hello Subject 1342,\n"
    +"Welcome to my escape room! A\n"
    +"game where you are stuck in a room\n"
    +"and you have to solve puzzles\n"
    +"to escape and move on to the next.\n"
    +"To escape your first room, you\n"
    +"need to forget who you were and\n"
    +"focus on who you are now.\n";
  playerMap[3][6]=5; 
  lockPassKey[3][6]=1342;
  itemMap[3][6]=0;
  for (int i=0; i<13; i++)playerMap[13][i]=1;
  playerMap[3][9]=4;
  noteMap[3][9]="";
  playerMap[6][9]=4;
  noteMap[6][9]="\n\n\n\n\n\n\nHint: T is the first letter.";
  playerMap[10][9]=2;
  itemMap[10][9]=4;
  lockPassKey[10][9]=3740;
  noteMap[10][9]="Good job my subject, here\'s your\n"
    +"next puzzle.\n"
    +"Answer is 2019";
  playerMap[10][6]=5;
  //playerMap[10][6]=0;  //Delete this
  lockPassKey[10][6]=2019;
  playerMap[10][4]=1;
  playerMap[11][2]=1;
  playerMap[8][3]=4;
  noteMap[8][3]="This will be the last message\n"
    +"you\'ll be hearing from me.\n"
    +"See you at the end!";
  playerMap[13][3]=6;
  playerMap[19][3]=1;
  playerMap[15][7]=1;
  playerMap[14][2]=1;
  playerMap[21][1]=1;
  playerMap[21][8]=1;
  playerMap[22][4]=1;
  playerMap[16][11]=1;
  playerMap[18][4]=1;
  playerMap[17][2]=1;
  playerMap[18][10]=1;
  playerMap[19][9]=1;
  playerMap[23][5]=1;
  playerMap[17][8]=1;
  playerMap[19][11]=1;
  //playerMap[2][2]=7;//del this
  playerMap[22][10]=7;
}
void drawRoomOne() {
  int squareX=characterX/32;
  int squareY=characterY/32;
  //println(squareX,squareY);
  if (lastMove=='w')squareY--;
  else if (lastMove=='a')squareX--;
  else if (lastMove=='s')squareY++;
  else if (lastMove=='d')squareX++;
  squareX=max(0, squareX);
  squareY=max(0, squareY);
  if (playerMap[squareX][squareY]==4) {
    if (squareX==3&&squareY==9) {
      if (hasMenuOpen) {
        image(roomOneGrid, 0, 0);
      }
    } else if (squareX==6&&squareY==9) {
      if (hasMenuOpen) {
        image(roomOneGridPuzzle, 0, 0);
      }
    }
  }
}

void winPlatform() {
  int squareX=characterX/32;
  int squareY=characterY/32;
  if (playerMap[squareX][squareY]==7) {
    currentWindow=7;
  }
}
void timeElasped() {
  secondElasped=second()-startSec;
  minuteElasped=minute()-startMin;
  hourElasped=hour()-startHr;
  if (secondElasped<0) {
    secondElasped+=60;
    minuteElasped--;
  }
  if (minuteElasped<0) {
    minuteElasped+=60;
    hourElasped--;
  }
  if (hourElasped<0) {
    hourElasped+=24;
  }
  String outputLine="";
  if (hourElasped<10)outputLine+="0"+hourElasped+":";
  else outputLine+=hourElasped+":";
  if (minuteElasped<10)outputLine+="0"+minuteElasped+":";
  else outputLine+=minuteElasped+":";
  if (secondElasped<10)outputLine+="0"+secondElasped;
  else outputLine+=secondElasped;
  text("Time "+outputLine, 20, 470);
}
void guiPopup() {
  int squareX=characterX/32;
  int squareY=characterY/32;
  if (lastMove=='w')squareY--;
  else if (lastMove=='a')squareX--;
  else if (lastMove=='s')squareY++;
  else if (lastMove=='d')squareX++;
  squareX=max(0, squareX);
  squareY=max(0, squareY);
  //println(playerMap[squareX][squareY],squareX,squareY);
  if (playerMap[squareX][squareY]==4) {
    if (keyPressed&&key==' '&&!hasMenuOpen&&!spaceBeenPressed) {
      hasMenuOpen=true;
      noteMessage="";
      spaceBeenPressed=false;
    }
    if (hasMenuOpen) {
      image(paperNote, 0, 0);
      PFont font = loadFont("YuGothicUI-Bold-48.vlw");
      textFont(font);
      textSize(30);
      if (noteMessage.length()!=noteMap[squareX][squareY].length())
        noteMessage+=noteMap[squareX][squareY].charAt(noteMessage.length());
      else {
        fill(100);
        text("Press any key to continue...", 200, 425);
      }
      fill(0);
      text(noteMessage+"_", 150, 100);
      if (mousePressed||(keyPressed&&(key!=' '||spaceBeenPressed)))hasMenuOpen=false;
      if (!keyPressed)spaceBeenPressed=true;
    } else {
      if (!keyPressed)spaceBeenPressed=false;
    }
  } else if (playerMap[squareX][squareY]==2||playerMap[squareX][squareY]==5) {  //Maybe switch 5 to its own if
    if (keyPressed&&key==' '&&!hasMenuOpen&&!spaceBeenPressed) {
      hasMenuOpen=true;
      for (int i=0; i<4; i++) {
        finalValue[i]=0;
        curValue[i]=0;
        scrollX[i]=0;
        distance[i]=0;
      }
      colourSection=0;
      shackleY=0;
      numComb=0;
      hasUnlocked=false;
      spaceBeenPressed=false;
    }
    if (hasMenuOpen) {

      strokeWeight(10);
      fill(240);
      stroke(0);
      rect(96, 32, 608, 384);
      fill(100);
      textSize(30);
      text("Press\nany\nkey\nto\ncontinue", 125, 200);
      textSize(20);
      strokeWeight(28);
      noFill();
      stroke(0);
      if (hasUnlocked) {
        stroke(100, 200, 100);
      }
      arc(400, 150-shackleY, 200, 200, PI, 2*PI);
      line(300, 150-shackleY, 300, 200);
      line(500, 150-shackleY, 500, 200-shackleY);
      strokeWeight(1);
      fill(0);
      if (hasUnlocked) {
        fill(100, 200, 100);
      }
      rect(250, 200, 300, 200, 14);
      strokeWeight(2);
      stroke(255);
      line(270, 292, 280, 292);
      line(520, 292, 530, 292);
      strokeWeight(1);
      if (!hasUnlocked) {
        int wheelNum=(mouseX-305)/50;
        if (wheelNum>=0&&wheelNum<=3&&mouseX>=30&&mouseX<=495) {

          if (mousePressed) {
            distance[wheelNum]=scrollX[wheelNum]-mouseY;
            distance[wheelNum]/=15;
            if (distance[wheelNum]<0)distance[wheelNum]+=10;
            distance[wheelNum]%=10;
            curValue[wheelNum]=distance[wheelNum]+finalValue[wheelNum];
          } else {
            scrollX[wheelNum]=mouseY;
            finalValue[wheelNum]=curValue[wheelNum];
          }
          if (curValue[wheelNum]<0)curValue[wheelNum]+=10;
          curValue[wheelNum]%=10;
        }
      } else {
        shackleY=min(40, shackleY+2);
        if (shackleY==40) {
          hasMenuOpen=false;
          delay(2000);
          playerMap[squareX][squareY]=itemMap[squareX][squareY];
        }
      }
      numComb=0;
      boolean isInOneSection=false;
      for (int j=0; j<4; j++) {

        if (mouseX>=305+50*j&&mouseX<=345+50*j&&(mousePressed||(mouseY>=250&&mouseY<=340))&&!hasUnlocked) {
          isInOneSection=true;
          fill(255-min(255, colourSection));
          stroke(255-min(255, colourSection));
          rect(305+50*j, 250, 40, 90);
          fill(min(255, colourSection));
          stroke(min(255, colourSection));
          colourSection+=10;
        } else {
          fill(255);
          stroke(255);
          rect(305+50*j, 250, 40, 90);
          fill(0);
        }
        for (int i=0; i<3; i++) {
          text((i+curValue[j])%10, 320+50*j, 300+30*(i-1));
        }
        numComb*=10;
        numComb+=(1+curValue[j])%10;
      }
      if (!isInOneSection)colourSection=0;
      if (lockPassKey[squareX][squareY]==numComb)hasUnlocked=true;
      if (keyPressed&&(key!=' '||spaceBeenPressed))hasMenuOpen=false;
      if (!keyPressed)spaceBeenPressed=true;
    } else {
      if (!keyPressed)spaceBeenPressed=false;
    }
  } else if (playerMap[squareX][squareY]==3) {
    if (keyPressed&&key==' ') {
      if (itemMap[squareX][squareY]!=3)
        playerMap[squareX][squareY]=itemMap[squareX][squareY];
    } else {
      playerMap[squareX][squareY]=0;
    }
  } else if (playerMap[squareX][squareY]==5) {
    if (keyPressed&&key==' ') {
    }
  }
}
void resetRoom() {
  hasControl=true;
  characterX=32*5;
  characterY=32*5;
  lastMove='d';
  colourSection=0;
  shackleY=0;
  numComb=0;
  hasMenuOpen=false;
  for (int i=0; i<4; i++) {
    finalValue[i]=0;
    curValue[i]=0;
    scrollX[i]=0;
    distance[i]=0;
    playerBar[i]=0;
  }
  for (int i=0; i<25; i++) {
    for (int j=0; j<13; j++) {
      playerMap[i][j]=0;
      noteMap[i][j]="";
      lockPassKey[i][j]=0;
      itemMap[i][j]=0;
    }
  }
  for (int i=0; i<25; i++)playerMap[i][0]=1;
  for (int i=0; i<25; i++)playerMap[i][12]=1;
  for (int i=0; i<13; i++)playerMap[0][i]=1;
  for (int i=0; i<13; i++)playerMap[24][i]=1;
}
void playGame() {
  if (hasWentToCharacter) {
    currentWindow=onLevel;
  } else {
    background(#ff6700 );
    fill(0);
    text("You have not customized your character.\nAre you sure you want to continue\nwith the default settings?", 0, 50);
    characterX=10;
    characterY=100;
    colourPickerSample();
    stroke(100, 100, 200);
    fill(100, 100, 200);
    rect(300, 200, 200, 100);
    rect(550, 200, 200, 100);
    if (mouseX<=500&&mouseX>=300&&mouseY<=300&&mouseY>=200) {
      stroke(200, 200, 255);
      fill(200, 200, 255);
      rect(300, 200, 200, 100);
      if (mousePressed)currentWindow=1;//Mainmenu
    } else if (mouseX<=750&&mouseX>=550&&mouseY<=300&&mouseY>=200) {
      stroke(200, 200, 255);
      fill(200, 200, 255);
      rect(550, 200, 200, 100);
      if (mousePressed) {
        currentWindow=onLevel;//Room one
        hasWentToCharacter=true;
      }
    }
    fill(0);
    textSize(30);
    text("No, take me\nback", 320, 240);
    text("Yes, let's\ncontinue", 575, 240);
    //Warning screen
  }
}
void drawMap() {
  background(100);
  for (int i=0; i<25; i++) {
    for (int j=0; j<13; j++) {
      if (playerMap[i][j]!=1) {
        if ((i+j)%2==0) {
          stroke(#000080);
          fill(#000080);
          rect(32*i, 32*j, 31, 31);
        } else {
          stroke(#add8e6);
          fill(#add8e6);
          rect(32*i, 32*j, 31, 31);
        }
      }
      if (playerMap[i][j]==1||playerMap[i][j]==6) {
        stroke(200);
        fill(200);
        rect(32*i, 32*j, 31, 31);
      } else if (playerMap[i][j]==2) {
        image(lockedBox, 32*i, 32*j);
      } else if (playerMap[i][j]==3) {
        image(unlockedBox, 32*i, 32*j);
      } else if (playerMap[i][j]==4) {
        image(note, 32*i, 32*j);
      } else if (playerMap[i][j]==5) {
        image(lockedWall, 32*i, 32*j);
      } else if (playerMap[i][j]==7) {
        stroke(100, 200, 100);
        fill(100, 200, 100);
        rect(32*i, 32*j, 31, 31);
      }
      if (playerMap[i][j]==6) {
        image(iceFloor, 32*i, 32*j);
      }
    }
  }
  fill(100, 100, 200);
  stroke(100, 100, 200);
  if (mouseX>=340&&mouseX<=500&&mouseY>=430&&mouseY<=480) {
    fill(150, 150, 250);
    stroke(150, 150, 250);
    if (mousePressed&&!hasMenuOpen) {
      currentWindow=2;
      delay(100);
    }
  } else {
    fill(100, 100, 200);
    stroke(100, 100, 200);
  }
  rect(340, 430, 160, 50);
  if (mouseX>=540&&mouseX<=770&&mouseY>=430&&mouseY<=480) {
    fill(150, 150, 250);
    stroke(150, 150, 250);
    if (mousePressed)currentWindow=1;
  } else {
    fill(100, 100, 200);
    stroke(100, 100, 200);
  }
  rect(540, 430, 230, 50);
  fill(255);
  textSize(40);
  text("Restart", 350, 470);
  text("Main Menu", 550, 470);
}
void moveCharacter() {

  if (hasControl) {
    if (lastMove=='w') characterBackIdle();
    if (lastMove=='a') characterLeftIdle();
    if (lastMove=='s') characterFwdIdle();
    if (lastMove=='d') characterRightIdle();
    if (!hasMenuOpen) {
      if (keyPressed) {
        if (key=='w'||(key==CODED&&keyCode==UP)) {
          lastMove='w';
          hasControl=false;
        }
        if (key=='a'||(key==CODED&&keyCode==LEFT)) {
          lastMove='a';
          hasControl=false;
        }
        if (key=='s'||(key==CODED&&keyCode==DOWN)) {
          lastMove='s';
          hasControl=false;
        }
        if (key=='d'||(key==CODED&&keyCode==RIGHT)) {
          lastMove='d';
          hasControl=false;
        }
      }
      characterGridX=characterX/32;
      characterGridY=characterY/32;
      moveCharacterMoves=0;
      moveCharacterFrame=0;
    }
  } else {
    if (!hasMenuOpen) {
      if (lastMove=='w') {
        if (moveCharacterFrame++==0) {
          moveCharacterMoves++;
          characterY-=2;
        }
        if (moveCharacterMoves%2==0) characterBackOne();
        else characterBackTwo();
        if (playerMap[characterGridX][characterGridY-1]!=0
          &&playerMap[characterGridX][characterGridY-1]!=6
          &&playerMap[characterGridX][characterGridY-1]!=7) {

          if (moveCharacterMoves>4) {
            characterY+=10;
            hasControl=true;
          }
        }
      }
      if (lastMove=='a') {
        if (moveCharacterFrame++==0) {
          moveCharacterMoves++;
          characterX-=2;
        }
        if (moveCharacterMoves%2==0) characterLeftOne();
        else characterLeftTwo();
        if (playerMap[characterGridX-1][characterGridY]!=0
          &&playerMap[characterGridX-1][characterGridY]!=6
          &&playerMap[characterGridX-1][characterGridY]!=7) {

          if (moveCharacterMoves>4) {
            characterX+=10;
            hasControl=true;
          }
        }
      }
      if (lastMove=='s') {
        if (moveCharacterFrame++==0) {
          moveCharacterMoves++;
          characterY+=2;
        }
        if (moveCharacterMoves%2==0) characterFwdOne();
        else characterFwdTwo();
        if (playerMap[characterGridX][characterGridY+1]!=0
          &&playerMap[characterGridX][characterGridY+1]!=6
          &&playerMap[characterGridX][characterGridY+1]!=7) {
          if (moveCharacterMoves>4) {
            characterY-=10;
            hasControl=true;
          }
        }
      }
      if (lastMove=='d') {
        if (moveCharacterFrame++==0) {
          moveCharacterMoves++;
          characterX+=2;
        }
        if (moveCharacterMoves%2==0) characterRightOne();
        else characterRightTwo();
        if (playerMap[characterGridX+1][characterGridY]!=0
          &&playerMap[characterGridX+1][characterGridY]!=6
          &&playerMap[characterGridX+1][characterGridY]!=7) {
          if (moveCharacterMoves>4) {
            characterX-=10;
            hasControl=true;
          }
        }
      }
      moveCharacterFrame%=1;//This will be the FPS of the character
      if (moveCharacterMoves==16) {
        characterGridX=characterX/32;
        characterGridY=characterY/32;
        if (playerMap[characterGridX][characterGridY]==0
          ||playerMap[characterGridX][characterGridY]==7)
          hasControl=true;
        moveCharacterMoves=0;
        moveCharacterFrame=0;
      }
    }
  }
}
void drawColourSquare() {
  for (int i=0; i<256; i++) {
    for (int j=0; j<256; j++) {
      stroke(h, j, 255-i);
      point(j+colourSquareX, i+colourSquareY);
    }
  }
}
void colourPicker() {
  hasWentToCharacter=true;
  characterX=0;
  characterY=100;
  stroke(200);
  fill(200);
  rect(colourSquareX+s-3, colourSquareY+255-b+3, 6, -6);

  //This is to match the pixels that the pointer was on
  colorMode(HSB);
  for (int i=max(s-3, 0); i<=min(s+3, 255); i++) {
    for (int j=max(b-3, 0); j<=min(b+3, 255); j++) {
      stroke(h, i, j);
      point(i+colourSquareX, 255+colourSquareY-j);
    }
  }
  if (mousePressed) {
    if (mouseX<=650&&mouseX>=450&&mouseY<=65&&mouseY>=15) {
      h=(int)hue(characterHairOne);
      s=(int)saturation(characterHairOne);
      b=(int)brightness(characterHairOne);
      chosenHair=true;
      drawColourSquare();
      colorMode(RGB);
      stroke(200);
      fill(200);
      rect(colourSquareX, colourSquareY, 255, 255);
      colorMode(HSB);
      drawColourSquare();
    } else if (mouseX<=650&&mouseX>=450&&mouseY<=140&&mouseY>=90) {
      h=(int)hue(characterPantsOne);
      s=(int)saturation(characterPantsOne);
      b=(int)brightness(characterPantsOne);
      chosenHair=false;
      colorMode(RGB);
      stroke(200);
      fill(200);
      rect(colourSquareX, colourSquareY, 255, 255);
      colorMode(HSB);
      drawColourSquare();
    }
  }
  if (chosenHair) {
    characterHairOne=color(h, s, b);
    characterHairTwo=color(h, s, b*.9);
    stroke(255);
    fill(200);
    rect(450, 90, 200, 50);
    stroke(150, 100, 200);
    fill(150, 100, 200);
    rect(450, 15, 200, 50);
  } else {
    characterPantsOne=color(h, s, b);
    characterPantsTwo=color(h, s, b*.65);
    characterPantsThree=color(h, s, b*.6);
    stroke(255);
    fill(200);
    rect(450, 15, 200, 50);//TODO change it to a more appeasing colour
    stroke(150, 100, 200);
    fill(150, 100, 200);
    rect(450, 90, 200, 50);
  }
  fill(200, 100, 100);
  textSize(48);
  text("Hair", 495, 58);
  text("Pants", 480, 130);
  colorMode(RGB);
  colourPickerSample();

  colorMode(HSB);
  for (int i=0; i<256; i++) {
    stroke(i, 255, 255);
    line(colourSquareX+300, i+colourSquareY, colourSquareX+325, i+colourSquareY);
  }
  if (mousePressed) {
    if (mouseX<=colourSquareX+255&&mouseX>=colourSquareX&&mouseY<=colourSquareY+255&&mouseY>=colourSquareY) {  //The square
      s=mouseX-colourSquareX;
      b=255-mouseY+colourSquareY;
    } else if (mouseX<=colourSquareX+325&&mouseX>=colourSquareX+300&&mouseY<=colourSquareY+255&&mouseY>=colourSquareY) {  //The slide
      h=mouseY-colourSquareY;

      //To redraw a neutral background
      colorMode(RGB);
      stroke(200);
      fill(200);
      rect(colourSquareX, colourSquareY, 255, 255);

      //Redraw square
      colorMode(HSB);
      drawColourSquare();
    }
  }

  //Draws the pointer to where the mouse is
  colorMode(RGB);
  stroke(255);
  fill(255);
  line(colourSquareX+300, h+colourSquareY, colourSquareX+325, h+colourSquareY);
  ellipse(s+colourSquareX, colourSquareY+255-b, 5, 5);

  //Main menu
  if (mouseX>=550&&mouseX<=750&&mouseY>=425&&mouseY<=475) {
    fill(100, 200, 200);
    stroke(100, 200, 200);
    if (mousePressed) currentWindow=1;
  }
  textSize(30);
  rect(550, 425, 200, 50);
  fill(100, 100, 200);
  text("Main Menu", 575, 460);
}
void mainMenu() {
  background(bg);
  //Do a background gameplay of your character
  PFont font = loadFont("YuGothicUI-Bold-48.vlw");
  stroke(100);
  strokeWeight(3);
  noFill();
  rect(300, 100, 200, 50);
  rect(300, 175, 200, 50);
  rect(300, 250, 200, 50);
  rect(300, 325, 200, 50);
  rect(300, 400, 200, 50);
  fill(255);
  textFont(font);
  text("Escape Room", 250, 50);
  textSize(30);
  text("Play", 370, 135);
  text("Levels", 355, 210);
  text("Character", 335, 285);
  text("Instructions", 320, 360);
  text("Quit", 370, 435);
  if (mouseX<=500&&mouseX>=300&&mouseY<=150&&mouseY>=100) {
    if (mainMenuBoxes+3<=255)mainMenuBoxes+=3;
    fill(mainMenuBoxes);
    stroke(mainMenuBoxes);
    rect(300, 100, 200, 50);
    fill(255-mainMenuBoxes);
    text("Play", 370, 135);
    if (mousePressed) currentWindow=2;
  } else if (mouseX<=500&&mouseX>=300&&mouseY<=225&&mouseY>=175) {
    if (mainMenuBoxes+3<=255)mainMenuBoxes+=3;
    fill(mainMenuBoxes);
    stroke(mainMenuBoxes);
    rect(300, 175, 200, 50);
    fill(255-mainMenuBoxes);
    text("Levels", 355, 210);
    if (mousePressed) currentWindow=3;
  } else if (mouseX<=500&&mouseX>=300&&mouseY<=300&&mouseY>=250) {
    if (mainMenuBoxes+3<=255)mainMenuBoxes+=3;
    fill(mainMenuBoxes);
    stroke(mainMenuBoxes);
    rect(300, 250, 200, 50);
    fill(255-mainMenuBoxes);
    text("Character", 335, 285);
    if (mousePressed) currentWindow=4;
  } else if (mouseX<=500&&mouseX>=300&&mouseY<=375&&mouseY>=325) {
    if (mainMenuBoxes+3<=255)mainMenuBoxes+=3;
    fill(mainMenuBoxes);
    stroke(mainMenuBoxes);
    rect(300, 325, 200, 50);
    fill(255-mainMenuBoxes);
    text("Instructions", 320, 360);
    if (mousePressed) currentWindow=5;
  } else if (mouseX<=500&&mouseX>=300&&mouseY<=450&&mouseY>=400) {
    if (mainMenuBoxes+3<=255)mainMenuBoxes+=3;
    fill(mainMenuBoxes);
    stroke(mainMenuBoxes);
    rect(300, 400, 200, 50);
    fill(255-mainMenuBoxes);
    text("Quit", 370, 435);
    if (mousePressed) currentWindow=6;
  } else {
    mainMenuBoxes=100;
  }
}
void splashScreen() {

  float lightAngle=30*sin(radians(sineWaveT))+90;
  sineWaveT+=3;
  float lampX=200*cos(radians(lightAngle))+400, lampY=200*sin(radians(lightAngle));
  textSize(50);
  PFont font = loadFont("YuGothicUI-Bold-48.vlw");
  PImage lantern=loadImage("lantern.png");
  foreGround.beginDraw();
  foreGround.smooth();
  foreGround.background(bg);
  foreGround.stroke(255);
  foreGround.fill(255);
  foreGround.textFont(font);
  foreGround.text("Josh's", 50, 50);
  foreGround.text("Escape", 150, 100);
  foreGround.text("Room", 250, 150);
  foreGround.text("Click \"Play\" to continue", 150, 250);
  foreGround.textSize(24);
  foreGround.text("Good Luck, Have Fun!", 50, 450);
  foreGround.stroke(100);
  if (mouseX<=750&&mouseX>=600&mouseY<=75&&mouseY>=25) foreGround.fill(100, 200, 100);//TODO change colour to nicer colour
  foreGround.rect(600, 25, 150, 50);
  foreGround.fill(100);
  foreGround.textSize(48);
  foreGround.text("Play", 625, 63);
  foreGround.endDraw();
  foreGround.loadPixels();
  //Cite 1
  for (int i=0; i<800; i++) {
    for (int j=0; j<500; j++) {
      int loc=i+j*800;
      float r=red(foreGround.pixels[loc]);
      float g=green(foreGround.pixels[loc]);
      float b=blue(foreGround.pixels[loc]);
      float d = min(dist(lampX, lampY, i, j), dist(mouseX, mouseY, i, j));
      float f=map(d, 0, 100, 1.5, 0);
      foreGround.pixels[loc]=color(r*f, g*f, b*f);
    }
  }
  image(foreGround, 0, 0);
  stroke(255);
  line(400, 0, lampX, lampY);
  translate(lampX, lampY);
  rotate(radians(lightAngle-90));
  image(lantern, -16, -17, 32, 34);
  if (mousePressed) {
    if (mouseX<=750&&mouseX>=600&mouseY<=75&&mouseY>=25) {
      currentWindow=1;
    }
  }
}
void colourPickerSample() {
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(70+characterX, 100+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(70+characterX, 110+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(80+characterX, 80+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(80+characterX, 90+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(80+characterX, 100+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(80+characterX, 110+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(80+characterX, 120+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(80+characterX, 130+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(80+characterX, 140+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(80+characterX, 210+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(80+characterX, 220+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(90+characterX, 70+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(90+characterX, 80+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(90+characterX, 90+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(90+characterX, 100+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(90+characterX, 110+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(90+characterX, 120+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(90+characterX, 130+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(90+characterX, 140+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(90+characterX, 150+characterY, 9, 9);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  rect(90+characterX, 200+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(90+characterX, 210+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(90+characterX, 220+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(90+characterX, 230+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(100+characterX, 60+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(100+characterX, 70+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(100+characterX, 80+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(100+characterX, 90+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(100+characterX, 100+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(100+characterX, 110+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(100+characterX, 120+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(100+characterX, 130+characterY, 9, 9);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  rect(100+characterX, 140+characterY, 9, 9);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  rect(100+characterX, 150+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(100+characterX, 160+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(100+characterX, 190+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(100+characterX, 200+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(100+characterX, 210+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(100+characterX, 220+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(100+characterX, 230+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(110+characterX, 50+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(110+characterX, 60+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(110+characterX, 70+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(110+characterX, 80+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(110+characterX, 90+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(110+characterX, 100+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(110+characterX, 110+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(110+characterX, 120+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(110+characterX, 130+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(110+characterX, 140+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(110+characterX, 150+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(110+characterX, 160+characterY, 9, 9);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  rect(110+characterX, 170+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(110+characterX, 180+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(110+characterX, 190+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(110+characterX, 200+characterY, 9, 9);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  rect(110+characterX, 210+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(110+characterX, 220+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(110+characterX, 230+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(110+characterX, 240+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(110+characterX, 250+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(120+characterX, 50+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(120+characterX, 60+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(120+characterX, 70+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(120+characterX, 80+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(120+characterX, 90+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(120+characterX, 100+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(120+characterX, 110+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(120+characterX, 120+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(120+characterX, 130+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(120+characterX, 140+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(120+characterX, 150+characterY, 9, 9);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  rect(120+characterX, 160+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(120+characterX, 170+characterY, 9, 9);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  rect(120+characterX, 180+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(120+characterX, 190+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(120+characterX, 200+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(120+characterX, 210+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(120+characterX, 220+characterY, 9, 9);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  rect(120+characterX, 230+characterY, 9, 9);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  rect(120+characterX, 240+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(120+characterX, 250+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(120+characterX, 260+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(130+characterX, 40+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(130+characterX, 50+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(130+characterX, 60+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(130+characterX, 70+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(130+characterX, 80+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(130+characterX, 90+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(130+characterX, 100+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(130+characterX, 110+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(130+characterX, 120+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(130+characterX, 130+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(130+characterX, 140+characterY, 9, 9);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  rect(130+characterX, 150+characterY, 9, 9);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  rect(130+characterX, 160+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(130+characterX, 170+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(130+characterX, 180+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(130+characterX, 190+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(130+characterX, 200+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(130+characterX, 210+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(130+characterX, 220+characterY, 9, 9);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  rect(130+characterX, 230+characterY, 9, 9);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  rect(130+characterX, 240+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(130+characterX, 250+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(130+characterX, 260+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(140+characterX, 40+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(140+characterX, 50+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(140+characterX, 60+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(140+characterX, 70+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(140+characterX, 80+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(140+characterX, 90+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(140+characterX, 100+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(140+characterX, 110+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(140+characterX, 120+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(140+characterX, 130+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(140+characterX, 140+characterY, 9, 9);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  rect(140+characterX, 150+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(140+characterX, 160+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(140+characterX, 170+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(140+characterX, 180+characterY, 9, 9);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  rect(140+characterX, 190+characterY, 9, 9);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  rect(140+characterX, 200+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(140+characterX, 210+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(140+characterX, 220+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(140+characterX, 230+characterY, 9, 9);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  rect(140+characterX, 240+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(140+characterX, 250+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(150+characterX, 40+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(150+characterX, 50+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(150+characterX, 60+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(150+characterX, 70+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(150+characterX, 80+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(150+characterX, 90+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(150+characterX, 100+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(150+characterX, 110+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(150+characterX, 120+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(150+characterX, 130+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(150+characterX, 140+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(150+characterX, 150+characterY, 9, 9);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  rect(150+characterX, 160+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(150+characterX, 170+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(150+characterX, 180+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(150+characterX, 190+characterY, 9, 9);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  rect(150+characterX, 200+characterY, 9, 9);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  rect(150+characterX, 210+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(150+characterX, 220+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(150+characterX, 230+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(150+characterX, 240+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(160+characterX, 40+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(160+characterX, 50+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(160+characterX, 60+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(160+characterX, 70+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(160+characterX, 80+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(160+characterX, 90+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(160+characterX, 100+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(160+characterX, 110+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(160+characterX, 120+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(160+characterX, 130+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(160+characterX, 140+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(160+characterX, 150+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(160+characterX, 160+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(160+characterX, 170+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(160+characterX, 180+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(160+characterX, 190+characterY, 9, 9);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  rect(160+characterX, 200+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(160+characterX, 210+characterY, 9, 9);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  rect(160+characterX, 220+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(160+characterX, 230+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(160+characterX, 240+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(170+characterX, 40+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(170+characterX, 50+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(170+characterX, 60+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(170+characterX, 70+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(170+characterX, 80+characterY, 9, 9);
  stroke(characterHairOne);
  fill(characterHairOne);
  rect(170+characterX, 90+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(170+characterX, 100+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(170+characterX, 110+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(170+characterX, 120+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(170+characterX, 130+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(170+characterX, 140+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(170+characterX, 150+characterY, 9, 9);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  rect(170+characterX, 160+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(170+characterX, 170+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(170+characterX, 180+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(170+characterX, 190+characterY, 9, 9);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  rect(170+characterX, 200+characterY, 9, 9);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  rect(170+characterX, 210+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(170+characterX, 220+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(170+characterX, 230+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(170+characterX, 240+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(180+characterX, 50+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(180+characterX, 60+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(180+characterX, 70+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(180+characterX, 80+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(180+characterX, 90+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(180+characterX, 100+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(180+characterX, 110+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(180+characterX, 120+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(180+characterX, 130+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(180+characterX, 140+characterY, 9, 9);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  rect(180+characterX, 150+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(180+characterX, 160+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(180+characterX, 170+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(180+characterX, 180+characterY, 9, 9);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  rect(180+characterX, 190+characterY, 9, 9);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  rect(180+characterX, 200+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(180+characterX, 210+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(180+characterX, 220+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(180+characterX, 230+characterY, 9, 9);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  rect(180+characterX, 240+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(180+characterX, 250+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(190+characterX, 50+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(190+characterX, 60+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(190+characterX, 70+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(190+characterX, 80+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(190+characterX, 90+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(190+characterX, 100+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(190+characterX, 110+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(190+characterX, 120+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(190+characterX, 130+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(190+characterX, 140+characterY, 9, 9);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  rect(190+characterX, 150+characterY, 9, 9);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  rect(190+characterX, 160+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(190+characterX, 170+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(190+characterX, 180+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(190+characterX, 190+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(190+characterX, 200+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(190+characterX, 210+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(190+characterX, 220+characterY, 9, 9);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  rect(190+characterX, 230+characterY, 9, 9);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  rect(190+characterX, 240+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(190+characterX, 250+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(190+characterX, 260+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(200+characterX, 60+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(200+characterX, 70+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(200+characterX, 80+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(200+characterX, 90+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(200+characterX, 100+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(200+characterX, 110+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(200+characterX, 120+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(200+characterX, 130+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(200+characterX, 140+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(200+characterX, 150+characterY, 9, 9);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  rect(200+characterX, 160+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(200+characterX, 170+characterY, 9, 9);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  rect(200+characterX, 180+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(200+characterX, 190+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(200+characterX, 200+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(200+characterX, 210+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(200+characterX, 220+characterY, 9, 9);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  rect(200+characterX, 230+characterY, 9, 9);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  rect(200+characterX, 240+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(200+characterX, 250+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(200+characterX, 260+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(210+characterX, 60+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(210+characterX, 70+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(210+characterX, 80+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(210+characterX, 90+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(210+characterX, 100+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(210+characterX, 110+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(210+characterX, 120+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(210+characterX, 130+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(210+characterX, 140+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(210+characterX, 150+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(210+characterX, 160+characterY, 9, 9);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  rect(210+characterX, 170+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(210+characterX, 180+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(210+characterX, 190+characterY, 9, 9);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  rect(210+characterX, 200+characterY, 9, 9);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  rect(210+characterX, 210+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(210+characterX, 220+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(210+characterX, 230+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(210+characterX, 240+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(210+characterX, 250+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(220+characterX, 70+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(220+characterX, 80+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(220+characterX, 90+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(220+characterX, 100+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(220+characterX, 110+characterY, 9, 9);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  rect(220+characterX, 120+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(220+characterX, 130+characterY, 9, 9);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  rect(220+characterX, 140+characterY, 9, 9);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  rect(220+characterX, 150+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(220+characterX, 160+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(220+characterX, 190+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(220+characterX, 200+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(220+characterX, 210+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(220+characterX, 220+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(220+characterX, 230+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(230+characterX, 80+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(230+characterX, 90+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(230+characterX, 100+characterY, 9, 9);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  rect(230+characterX, 110+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(230+characterX, 120+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(230+characterX, 130+characterY, 9, 9);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  rect(230+characterX, 140+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(230+characterX, 150+characterY, 9, 9);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  rect(230+characterX, 200+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(230+characterX, 210+characterY, 9, 9);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  rect(230+characterX, 220+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(230+characterX, 230+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(240+characterX, 100+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(240+characterX, 110+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(240+characterX, 130+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(240+characterX, 140+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(240+characterX, 210+characterY, 9, 9);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  rect(240+characterX, 220+characterY, 9, 9);
}
void characterFwdIdle() {
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 8+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 12+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 15+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(9+characterX, 20+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(9+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(9+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 13+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(10+characterX, 14+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(10+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 19+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(10+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 5+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(11+characterX, 16+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(11+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(11+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 25+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 5+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 15+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(12+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(12+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 22+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(12+characterX, 23+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(12+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 26+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 4+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 14+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(13+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(13+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(13+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(13+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(13+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 26+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(14+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(14+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 14+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(14+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(14+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(14+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(14+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(15+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(15+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 15+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(15+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(15+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(16+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 15+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(16+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 21+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(17+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 15+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(17+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(17+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(17+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 9+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 14+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(18+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(18+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(18+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(18+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 5+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 6+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 14+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(19+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(19+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(19+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(19+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(19+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 15+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(20+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(20+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 22+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(20+characterX, 23+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(20+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(21+characterX, 16+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(21+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(21+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(21+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(21+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(22+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 13+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 14+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 19+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(22+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(22+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 8+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 12+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(23+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(23+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 15+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(23+characterX, 20+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(23+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(23+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 22+characterY);
}
void characterFwdOne() {
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 8+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 12+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 13+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(10+characterX, 14+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(10+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 22+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(10+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 24+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 5+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(11+characterX, 16+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(11+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(11+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(11+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 22+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(11+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 24+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 5+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 15+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(12+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(12+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 4+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 14+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(13+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(13+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(13+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(13+characterX, 21+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(13+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 24+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(14+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(14+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 14+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(14+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 18+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(14+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(14+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(15+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(15+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 15+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(15+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(15+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 23+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(16+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 15+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(16+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 21+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 23+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(17+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 15+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(17+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(17+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(17+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 23+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 25+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(17+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 9+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 14+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(18+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 18+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(18+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(18+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(18+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(18+characterX, 25+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(18+characterX, 26+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 28+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 5+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 6+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 14+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(19+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(19+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(19+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(19+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(19+characterX, 25+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(19+characterX, 26+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 28+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 15+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(20+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(20+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(20+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(20+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 22+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(20+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(20+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(20+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(21+characterX, 16+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(21+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(21+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(21+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(22+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 13+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 14+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(22+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(22+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 8+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 12+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(23+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(23+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 19+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(23+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(23+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 21+characterY);
}
void characterFwdTwo() {
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 8+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 12+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 19+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 22+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 13+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(10+characterX, 14+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(10+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(10+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(10+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(10+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 22+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 5+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(11+characterX, 16+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(11+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 25+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 5+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 15+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(12+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(12+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(12+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(12+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 22+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(12+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(12+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(12+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 27+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 4+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 14+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(13+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(13+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(13+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(13+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(13+characterX, 25+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(13+characterX, 26+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 28+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(14+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(14+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 14+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(14+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 18+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(14+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(14+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(14+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(14+characterX, 25+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(14+characterX, 26+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 28+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(15+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(15+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 15+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(15+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(15+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 23+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 25+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(15+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(16+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 15+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(16+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 21+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 23+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(17+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 15+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(17+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(17+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(17+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 23+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 9+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 14+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(18+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 18+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(18+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(18+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 5+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 6+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 14+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(19+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(19+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(19+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(19+characterX, 21+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(19+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 15+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(20+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(20+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(21+characterX, 16+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(21+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(21+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(21+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(21+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 22+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(21+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(22+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 13+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 14+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(22+characterX, 22+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 8+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 12+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(23+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(23+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 14+characterY);
}
void characterBackIdle() {
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 8+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 12+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(8+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(8+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 15+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(8+characterX, 20+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(8+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(8+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(9+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(9+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 19+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(9+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(9+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(10+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(10+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(10+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 22+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(11+characterX, 23+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(11+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 5+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 6+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(12+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(12+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(13+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(13+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(14+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(14+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(14+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(15+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(16+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(16+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 24+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(17+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(17+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(17+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(17+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 25+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 4+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(18+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(18+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 26+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 5+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 22+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(19+characterX, 23+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(19+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 26+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 5+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(20+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 25+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 19+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(21+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 12+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 15+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 20+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(22+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(22+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 8+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 11+characterY);
}
void characterBackOne() {
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 8+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 12+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(8+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(8+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(9+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(9+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(9+characterX, 22+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(10+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(10+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 22+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(10+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(11+characterX, 21+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(11+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 5+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 6+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(13+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(13+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(14+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(14+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(14+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(14+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(15+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(15+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(16+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(16+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(16+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(16+characterX, 25+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(16+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 27+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(17+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(17+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(17+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(17+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(17+characterX, 25+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(17+characterX, 26+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 28+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 4+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo); 
  point(18+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(18+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(18+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(18+characterX, 25+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(18+characterX, 26+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 28+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 5+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(19+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(19+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 27+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 5+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(20+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 22+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(20+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 25+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 16+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(21+characterX, 17+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(21+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(21+characterX, 19+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(21+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 12+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 15+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(22+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 19+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 8+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 19+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 11+characterY);
}
void characterBackTwo() {
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 19+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 8+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 12+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(8+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(8+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 15+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(8+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(8+characterX, 19+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(8+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(9+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(9+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 16+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(9+characterX, 17+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(9+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(9+characterX, 19+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(10+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(10+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 22+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(10+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(11+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(11+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 5+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 6+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(12+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(12+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(12+characterX, 25+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(12+characterX, 26+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 28+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(13+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(13+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(13+characterX, 25+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(13+characterX, 26+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 28+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(14+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(14+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(14+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(14+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(14+characterX, 25+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(14+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(15+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(15+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(16+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(16+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(16+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 25+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(17+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(17+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 15+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(17+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(17+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 25+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 4+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 17+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 25+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 5+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 9+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 14+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 18+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(19+characterX, 21+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(19+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 24+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 5+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(20+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 22+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(20+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 24+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 21+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 22+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(21+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 12+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 8+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 11+characterY);
}
void characterRightIdle() {
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 9+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 7+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 21+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 22+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(14+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 19+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 22+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(14+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 20+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 21+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 22+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(15+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(15+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(16+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 15+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 9+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 23+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(18+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(18+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(18+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(18+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 23+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(18+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 14+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(19+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(19+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(19+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 14+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(20+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(20+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(21+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(21+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(22+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(22+characterX, 13+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 14+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 15+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 7+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 9+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 11+characterY);
}
void characterRightOne() {
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 9+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 7+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 25+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 19+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(13+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(13+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(13+characterX, 24+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(13+characterX, 25+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(14+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 19+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(14+characterX, 21+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(14+characterX, 22+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(14+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(14+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(14+characterX, 25+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 21+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(15+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(15+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(16+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 15+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 20+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 21+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 22+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(16+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 9+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 19+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(17+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(18+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(18+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(18+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(18+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 23+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(18+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 14+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(19+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(19+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(19+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 23+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(19+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 14+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(20+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(20+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 24+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(20+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(21+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(21+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 23+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(21+characterX, 24+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(21+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(22+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(22+characterX, 13+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 14+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 15+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 7+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 9+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 11+characterY);
}
void characterRightTwo() {
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 9+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 7+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 23+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(12+characterX, 24+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(12+characterX, 25+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(12+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 24+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(13+characterX, 25+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(13+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(14+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 19+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 23+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 25+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(14+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 23+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 25+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(15+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(16+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 15+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(16+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 9+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(17+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(17+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(17+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(18+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(18+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(18+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(18+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(18+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(18+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(18+characterX, 21+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(18+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(18+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(18+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(18+characterX, 25+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(19+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 14+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(19+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(19+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(19+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(19+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 21+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(19+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(19+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(19+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(19+characterX, 25+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(20+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 14+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(20+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(20+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(20+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 25+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(20+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(21+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(21+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(21+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(21+characterX, 18+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(21+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(22+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(22+characterX, 13+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 14+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 15+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(22+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(22+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 7+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(23+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 9+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(24+characterX, 11+characterY);
}
void characterLeftIdle() {
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 9+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 7+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(9+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 13+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(9+characterX, 14+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(9+characterX, 15+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(9+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(10+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(10+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 14+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(11+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(11+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 22+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 14+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(12+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(12+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(12+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(13+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(13+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(13+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(13+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 23+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(13+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 9+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 23+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(15+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 15+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(15+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 20+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 21+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(16+characterX, 22+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(16+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(16+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(17+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 19+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 22+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(17+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 21+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 22+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 7+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(22+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 9+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 12+characterY);
}
void characterLeftOne() {
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 9+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 7+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(9+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 13+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(9+characterX, 14+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(9+characterX, 15+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(9+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(10+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(10+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 23+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(10+characterX, 24+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(10+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 14+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(11+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(11+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 24+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(11+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 14+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(12+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(12+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(12+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 23+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(12+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(13+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(13+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(13+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(13+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 23+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(13+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 9+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 19+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(14+characterX, 23+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(15+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 15+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 20+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 21+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 22+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(15+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 19+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 21+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(16+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(16+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(16+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(17+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 19+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(17+characterX, 21+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(17+characterX, 22+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(17+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(17+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(17+characterX, 25+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 19+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(18+characterX, 20+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(18+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(18+characterX, 24+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(18+characterX, 25+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(18+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 25+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(19+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 7+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(22+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 9+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 12+characterY);
}
void characterLeftTwo() {
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 9+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(7+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 7+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(8+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 12+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(8+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(9+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(9+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(9+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(9+characterX, 13+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(9+characterX, 14+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(9+characterX, 15+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(9+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(9+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(10+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(10+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(10+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(10+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(10+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(10+characterX, 18+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(10+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(10+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 6+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(11+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(11+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(11+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 14+characterY);
  stroke(152, 152, 160);
  fill(152, 152, 160);
  point(11+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(11+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(11+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 24+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 25+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(11+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(11+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 8+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(12+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(12+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(12+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 14+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(12+characterX, 15+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(12+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 17+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(12+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(12+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 21+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(12+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(12+characterX, 23+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(12+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(12+characterX, 25+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(12+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(12+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(13+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(13+characterX, 10+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(13+characterX, 11+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 13+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 14+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(13+characterX, 16+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(13+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(13+characterX, 18+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(13+characterX, 19+characterY);
  stroke(232, 232, 248);
  fill(232, 232, 248);
  point(13+characterX, 20+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(13+characterX, 21+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(13+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(13+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(13+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(13+characterX, 25+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(13+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(13+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 9+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(14+characterX, 11+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(14+characterX, 12+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(14+characterX, 13+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 18+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(14+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(14+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 21+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 22+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(14+characterX, 23+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(14+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(14+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(14+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 7+characterY);
  stroke(characterHairOne);
  fill(characterHairOne);
  point(15+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(15+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(15+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 15+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(15+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(15+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(15+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 24+characterY);
  stroke(characterPantsTwo);
  fill(characterPantsTwo);
  point(15+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(15+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(16+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 14+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 17+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 19+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 20+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(16+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(16+characterX, 23+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(16+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(16+characterX, 25+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(16+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(17+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 15+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 16+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 17+characterY);
  stroke(120, 64, 64);
  fill(120, 64, 64);
  point(17+characterX, 18+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 19+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(17+characterX, 20+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 21+characterY);
  stroke(characterPantsOne);
  fill(characterPantsOne);
  point(17+characterX, 22+characterY);
  stroke(248, 208, 184);
  fill(248, 208, 184);
  point(17+characterX, 23+characterY);
  stroke(216, 160, 120);
  fill(216, 160, 120);
  point(17+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(17+characterX, 25+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(17+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 4+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 13+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(18+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 16+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(18+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 18+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 22+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 23+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 24+characterY);
  stroke(56, 64, 104);
  fill(56, 64, 104);
  point(18+characterX, 25+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(18+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(18+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(19+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(19+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 23+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(19+characterX, 24+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(19+characterX, 25+characterY);
  stroke(characterPantsThree);
  fill(characterPantsThree);
  point(19+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(19+characterX, 27+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 5+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 12+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(20+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 15+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(20+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 17+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 24+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 25+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(20+characterX, 26+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 6+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 7+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(21+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 13+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 14+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(21+characterX, 15+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(21+characterX, 16+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 7+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 8+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 9+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 10+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 11+characterY);
  stroke(characterHairTwo);
  fill(characterHairTwo);
  point(22+characterX, 12+characterY);
  stroke(48, 40, 40);
  fill(48, 40, 40);
  point(22+characterX, 13+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(22+characterX, 14+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 9+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 10+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 11+characterY);
  stroke(0, 0, 0);
  fill(0, 0, 0);
  point(23+characterX, 12+characterY);
}

//Now, you might wonder what takes thousands of line. Its the sprites, they take up about 11k lines :>
