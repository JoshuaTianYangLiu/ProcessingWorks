void setup() {
  size(800, 500);
  background(100);
}
int characterX=0;
int characterY=0;
void draw() {
  col(100, 200, 100);
  int cnt=0;
  for (int i=0; i<25; i++) {
    for (int j=0; j<15; j++) {
      if (cnt++%2==0)col(100, 200, 100);
      else col(100, 100, 200);
      rect(32*i, 32*j, 32, 32);
    }
  } 
  if (keyPressed) {
    if (key=='w')--characterY;
    if (key=='a')--characterX;
    if (key=='s')++characterY;
    if (key=='d')characterX++;
  }
  drawCharacter(characterX, characterY);
}
int stateChange=0;
void drawCharacter(int x, int y) {
  stroke(1);
  if(stateChange++<20)characterFwdOne(x,y);
  else characterFwdTwo(x,y);
  stateChange%=40;
}
void characterFwdOne(int x, int y) {
  col(0, 0, 0);
  point(x+7, y+10);
  col(0, 0, 0);
  point(x+7, y+11);
  col(0, 0, 0);
  point(x+8, y+8);
  col(0, 0, 0);
  point(x+8, y+9);
  col(104, 72, 56);
  point(x+8, y+10);
  col(104, 72, 56);
  point(x+8, y+11);
  col(0, 0, 0);
  point(x+8, y+12);
  col(0, 0, 0);
  point(x+8, y+13);
  col(0, 0, 0);
  point(x+8, y+14);
  col(0, 0, 0);
  point(x+8, y+21);
  col(0, 0, 0);
  point(x+8, y+22);
  col(0, 0, 0);
  point(x+9, y+7);
  col(104, 72, 56);
  point(x+9, y+8);
  col(104, 72, 56);
  point(x+9, y+9);
  col(104, 72, 56);
  point(x+9, y+10);
  col(104, 72, 56);
  point(x+9, y+11);
  col(48, 40, 40);
  point(x+9, y+12);
  col(216, 160, 120);
  point(x+9, y+13);
  col(216, 160, 120);
  point(x+9, y+14);
  col(0, 0, 0);
  point(x+9, y+15);
  col(120, 64, 64);
  point(x+9, y+20);
  col(248, 208, 184);
  point(x+9, y+21);
  col(248, 208, 184);
  point(x+9, y+22);
  col(0, 0, 0);
  point(x+9, y+23);
  col(48, 40, 40);
  point(x+10, y+6);
  col(152, 104, 88);
  point(x+10, y+7);
  col(152, 104, 88);
  point(x+10, y+8);
  col(104, 72, 56);
  point(x+10, y+9);
  col(104, 72, 56);
  point(x+10, y+10);
  col(48, 40, 40);
  point(x+10, y+11);
  col(104, 72, 56);
  point(x+10, y+12);
  col(48, 40, 40);
  point(x+10, y+13);
  col(120, 64, 64);
  point(x+10, y+14);
  col(120, 64, 64);
  point(x+10, y+15);
  col(0, 0, 0);
  point(x+10, y+16);
  col(0, 0, 0);
  point(x+10, y+19);
  col(248, 208, 184);
  point(x+10, y+20);
  col(216, 160, 120);
  point(x+10, y+21);
  col(248, 208, 184);
  point(x+10, y+22);
  col(0, 0, 0);
  point(x+10, y+23);
  col(48, 40, 40);
  point(x+11, y+5);
  col(152, 104, 88);
  point(x+11, y+6);
  col(152, 104, 88);
  point(x+11, y+7);
  col(152, 104, 88);
  point(x+11, y+8);
  col(152, 104, 88);
  point(x+11, y+9);
  col(104, 72, 56);
  point(x+11, y+10);
  col(104, 72, 56);
  point(x+11, y+11);
  col(104, 72, 56);
  point(x+11, y+12);
  col(48, 40, 40);
  point(x+11, y+13);
  col(248, 208, 184);
  point(x+11, y+14);
  col(248, 208, 184);
  point(x+11, y+15);
  col(216, 160, 120);
  point(x+11, y+16);
  col(120, 64, 64);
  point(x+11, y+17);
  col(0, 0, 0);
  point(x+11, y+18);
  col(88, 160, 216);
  point(x+11, y+19);
  col(88, 160, 216);
  point(x+11, y+20);
  col(56, 104, 176);
  point(x+11, y+21);
  col(0, 0, 0);
  point(x+11, y+22);
  col(0, 0, 0);
  point(x+11, y+23);
  col(0, 0, 0);
  point(x+11, y+24);
  col(0, 0, 0);
  point(x+11, y+25);
  col(48, 40, 40);
  point(x+12, y+5);
  col(152, 104, 88);
  point(x+12, y+6);
  col(152, 104, 88);
  point(x+12, y+7);
  col(152, 104, 88);
  point(x+12, y+8);
  col(104, 72, 56);
  point(x+12, y+9);
  col(152, 104, 88);
  point(x+12, y+10);
  col(104, 72, 56);
  point(x+12, y+11);
  col(48, 40, 40);
  point(x+12, y+12);
  col(248, 208, 184);
  point(x+12, y+13);
  col(248, 208, 184);
  point(x+12, y+14);
  col(248, 208, 184);
  point(x+12, y+15);
  col(152, 152, 160);
  point(x+12, y+16);
  col(248, 208, 184);
  point(x+12, y+17);
  col(120, 64, 64);
  point(x+12, y+18);
  col(99, 173, 242);
  point(x+12, y+19);
  col(99, 173, 242);
  point(x+12, y+20);
  col(0, 0, 0);
  point(x+12, y+21);
  col(0, 0, 0);
  point(x+12, y+22);
  col(72, 104, 176);
  point(x+12, y+23);
  col(56, 104, 176);
  point(x+12, y+24);
  col(88, 160, 216);
  point(x+12, y+25);
  col(0, 0, 0);
  point(x+12, y+26);
  col(48, 40, 40);
  point(x+13, y+4);
  col(152, 104, 88);
  point(x+13, y+5);
  col(104, 72, 56);
  point(x+13, y+6);
  col(152, 104, 88);
  point(x+13, y+7);
  col(152, 104, 88);
  point(x+13, y+8);
  col(152, 104, 88);
  point(x+13, y+9);
  col(152, 104, 88);
  point(x+13, y+10);
  col(104, 72, 56);
  point(x+13, y+11);
  col(48, 40, 40);
  point(x+13, y+12);
  col(248, 208, 184);
  point(x+13, y+13);
  col(248, 208, 184);
  point(x+13, y+14);
  col(232, 232, 248);
  point(x+13, y+15);
  col(232, 232, 248);
  point(x+13, y+16);
  col(248, 208, 184);
  point(x+13, y+17);
  col(216, 160, 120);
  point(x+13, y+18);
  col(0, 0, 0);
  point(x+13, y+19);
  col(88, 160, 216);
  point(x+13, y+20);
  col(88, 160, 216);
  point(x+13, y+21);
  col(88, 160, 216);
  point(x+13, y+22);
  col(56, 104, 176);
  point(x+13, y+23);
  col(72, 104, 176);
  point(x+13, y+24);
  col(88, 160, 216);
  point(x+13, y+25);
  col(0, 0, 0);
  point(x+13, y+26);
  col(48, 40, 40);
  point(x+14, y+4);
  col(104, 72, 56);
  point(x+14, y+5);
  col(104, 72, 56);
  point(x+14, y+6);
  col(104, 72, 56);
  point(x+14, y+7);
  col(152, 104, 88);
  point(x+14, y+8);
  col(152, 104, 88);
  point(x+14, y+9);
  col(104, 72, 56);
  point(x+14, y+10);
  col(104, 72, 56);
  point(x+14, y+11);
  col(48, 40, 40);
  point(x+14, y+12);
  col(248, 208, 184);
  point(x+14, y+13);
  col(248, 208, 184);
  point(x+14, y+14);
  col(152, 152, 160);
  point(x+14, y+15);
  col(0, 0, 0);
  point(x+14, y+16);
  col(248, 208, 184);
  point(x+14, y+17);
  col(248, 208, 184);
  point(x+14, y+18);
  col(120, 64, 64);
  point(x+14, y+19);
  col(56, 104, 176);
  point(x+14, y+20);
  col(88, 160, 216);
  point(x+14, y+21);
  col(88, 160, 216);
  point(x+14, y+22);
  col(88, 160, 216);
  point(x+14, y+23);
  col(72, 104, 176);
  point(x+14, y+24);
  col(0, 0, 0);
  point(x+14, y+25);
  col(0, 0, 0);
  point(x+15, y+4);
  col(104, 72, 56);
  point(x+15, y+5);
  col(104, 72, 56);
  point(x+15, y+6);
  col(104, 72, 56);
  point(x+15, y+7);
  col(152, 104, 88);
  point(x+15, y+8);
  col(152, 104, 88);
  point(x+15, y+9);
  col(104, 72, 56);
  point(x+15, y+10);
  col(104, 72, 56);
  point(x+15, y+11);
  col(48, 40, 40);
  point(x+15, y+12);
  col(248, 208, 184);
  point(x+15, y+13);
  col(248, 208, 184);
  point(x+15, y+14);
  col(248, 208, 184);
  point(x+15, y+15);
  col(152, 152, 160);
  point(x+15, y+16);
  col(248, 208, 184);
  point(x+15, y+17);
  col(248, 208, 184);
  point(x+15, y+18);
  col(216, 160, 120);
  point(x+15, y+19);
  col(232, 232, 248);
  point(x+15, y+20);
  col(56, 104, 176);
  point(x+15, y+21);
  col(88, 160, 216);
  point(x+15, y+22);
  col(88, 160, 216);
  point(x+15, y+23);
  col(48, 40, 40);
  point(x+15, y+24);
  col(0, 0, 0);
  point(x+16, y+4);
  col(104, 72, 56);
  point(x+16, y+5);
  col(104, 72, 56);
  point(x+16, y+6);
  col(104, 72, 56);
  point(x+16, y+7);
  col(104, 72, 56);
  point(x+16, y+8);
  col(104, 72, 56);
  point(x+16, y+9);
  col(152, 104, 88);
  point(x+16, y+10);
  col(48, 40, 40);
  point(x+16, y+11);
  col(248, 208, 184);
  point(x+16, y+12);
  col(248, 208, 184);
  point(x+16, y+13);
  col(248, 208, 184);
  point(x+16, y+14);
  col(248, 208, 184);
  point(x+16, y+15);
  col(248, 208, 184);
  point(x+16, y+16);
  col(248, 208, 184);
  point(x+16, y+17);
  col(216, 160, 120);
  point(x+16, y+18);
  col(216, 160, 120);
  point(x+16, y+19);
  col(232, 232, 248);
  point(x+16, y+20);
  col(99, 173, 242);
  point(x+16, y+21);
  col(56, 104, 176);
  point(x+16, y+22);
  col(88, 160, 216);
  point(x+16, y+23);
  col(48, 40, 40);
  point(x+16, y+24);
  col(0, 0, 0);
  point(x+17, y+4);
  col(104, 72, 56);
  point(x+17, y+5);
  col(104, 72, 56);
  point(x+17, y+6);
  col(104, 72, 56);
  point(x+17, y+7);
  col(104, 72, 56);
  point(x+17, y+8);
  col(152, 104, 88);
  point(x+17, y+9);
  col(104, 72, 56);
  point(x+17, y+10);
  col(48, 40, 40);
  point(x+17, y+11);
  col(248, 208, 184);
  point(x+17, y+12);
  col(248, 208, 184);
  point(x+17, y+13);
  col(248, 208, 184);
  point(x+17, y+14);
  col(248, 208, 184);
  point(x+17, y+15);
  col(152, 152, 160);
  point(x+17, y+16);
  col(248, 208, 184);
  point(x+17, y+17);
  col(248, 208, 184);
  point(x+17, y+18);
  col(216, 160, 120);
  point(x+17, y+19);
  col(232, 232, 248);
  point(x+17, y+20);
  col(56, 104, 176);
  point(x+17, y+21);
  col(88, 160, 216);
  point(x+17, y+22);
  col(88, 160, 216);
  point(x+17, y+23);
  col(48, 40, 40);
  point(x+17, y+24);
  col(0, 0, 0);
  point(x+18, y+5);
  col(104, 72, 56);
  point(x+18, y+6);
  col(104, 72, 56);
  point(x+18, y+7);
  col(104, 72, 56);
  point(x+18, y+8);
  col(104, 72, 56);
  point(x+18, y+9);
  col(48, 40, 40);
  point(x+18, y+10);
  col(48, 40, 40);
  point(x+18, y+11);
  col(248, 208, 184);
  point(x+18, y+12);
  col(248, 208, 184);
  point(x+18, y+13);
  col(248, 208, 184);
  point(x+18, y+14);
  col(152, 152, 160);
  point(x+18, y+15);
  col(0, 0, 0);
  point(x+18, y+16);
  col(248, 208, 184);
  point(x+18, y+17);
  col(248, 208, 184);
  point(x+18, y+18);
  col(120, 64, 64);
  point(x+18, y+19);
  col(56, 104, 176);
  point(x+18, y+20);
  col(88, 160, 216);
  point(x+18, y+21);
  col(88, 160, 216);
  point(x+18, y+22);
  col(88, 160, 216);
  point(x+18, y+23);
  col(72, 104, 176);
  point(x+18, y+24);
  col(0, 0, 0);
  point(x+18, y+25);
  col(0, 0, 0);
  point(x+19, y+5);
  col(48, 40, 40);
  point(x+19, y+6);
  col(48, 40, 40);
  point(x+19, y+7);
  col(104, 72, 56);
  point(x+19, y+8);
  col(104, 72, 56);
  point(x+19, y+9);
  col(104, 72, 56);
  point(x+19, y+10);
  col(104, 72, 56);
  point(x+19, y+11);
  col(48, 40, 40);
  point(x+19, y+12);
  col(248, 208, 184);
  point(x+19, y+13);
  col(248, 208, 184);
  point(x+19, y+14);
  col(232, 232, 248);
  point(x+19, y+15);
  col(232, 232, 248);
  point(x+19, y+16);
  col(248, 208, 184);
  point(x+19, y+17);
  col(216, 160, 120);
  point(x+19, y+18);
  col(0, 0, 0);
  point(x+19, y+19);
  col(88, 160, 216);
  point(x+19, y+20);
  col(88, 160, 216);
  point(x+19, y+21);
  col(88, 160, 216);
  point(x+19, y+22);
  col(56, 104, 176);
  point(x+19, y+23);
  col(72, 104, 176);
  point(x+19, y+24);
  col(88, 160, 216);
  point(x+19, y+25);
  col(0, 0, 0);
  point(x+19, y+26);
  col(0, 0, 0);
  point(x+20, y+6);
  col(104, 72, 56);
  point(x+20, y+7);
  col(104, 72, 56);
  point(x+20, y+8);
  col(104, 72, 56);
  point(x+20, y+9);
  col(104, 72, 56);
  point(x+20, y+10);
  col(104, 72, 56);
  point(x+20, y+11);
  col(104, 72, 56);
  point(x+20, y+12);
  col(248, 208, 184);
  point(x+20, y+13);
  col(248, 208, 184);
  point(x+20, y+14);
  col(248, 208, 184);
  point(x+20, y+15);
  col(152, 152, 160);
  point(x+20, y+16);
  col(248, 208, 184);
  point(x+20, y+17);
  col(120, 64, 64);
  point(x+20, y+18);
  col(99, 173, 242);
  point(x+20, y+19);
  col(99, 173, 242);
  point(x+20, y+20);
  col(0, 0, 0);
  point(x+20, y+21);
  col(0, 0, 0);
  point(x+20, y+22);
  col(72, 104, 176);
  point(x+20, y+23);
  col(56, 104, 176);
  point(x+20, y+24);
  col(88, 160, 216);
  point(x+20, y+25);
  col(0, 0, 0);
  point(x+20, y+26);
  col(0, 0, 0);
  point(x+21, y+6);
  col(104, 72, 56);
  point(x+21, y+7);
  col(104, 72, 56);
  point(x+21, y+8);
  col(104, 72, 56);
  point(x+21, y+9);
  col(104, 72, 56);
  point(x+21, y+10);
  col(48, 40, 40);
  point(x+21, y+11);
  col(104, 72, 56);
  point(x+21, y+12);
  col(48, 40, 40);
  point(x+21, y+13);
  col(248, 208, 184);
  point(x+21, y+14);
  col(248, 208, 184);
  point(x+21, y+15);
  col(216, 160, 120);
  point(x+21, y+16);
  col(120, 64, 64);
  point(x+21, y+17);
  col(0, 0, 0);
  point(x+21, y+18);
  col(88, 160, 216);
  point(x+21, y+19);
  col(88, 160, 216);
  point(x+21, y+20);
  col(56, 104, 176);
  point(x+21, y+21);
  col(0, 0, 0);
  point(x+21, y+22);
  col(0, 0, 0);
  point(x+21, y+23);
  col(0, 0, 0);
  point(x+21, y+24);
  col(0, 0, 0);
  point(x+21, y+25);
  col(0, 0, 0);
  point(x+22, y+7);
  col(104, 72, 56);
  point(x+22, y+8);
  col(104, 72, 56);
  point(x+22, y+9);
  col(104, 72, 56);
  point(x+22, y+10);
  col(104, 72, 56);
  point(x+22, y+11);
  col(48, 40, 40);
  point(x+22, y+12);
  col(0, 0, 0);
  point(x+22, y+13);
  col(120, 64, 64);
  point(x+22, y+14);
  col(120, 64, 64);
  point(x+22, y+15);
  col(0, 0, 0);
  point(x+22, y+16);
  col(0, 0, 0);
  point(x+22, y+19);
  col(248, 208, 184);
  point(x+22, y+20);
  col(216, 160, 120);
  point(x+22, y+21);
  col(248, 208, 184);
  point(x+22, y+22);
  col(0, 0, 0);
  point(x+22, y+23);
  col(0, 0, 0);
  point(x+23, y+8);
  col(0, 0, 0);
  point(x+23, y+9);
  col(104, 72, 56);
  point(x+23, y+10);
  col(104, 72, 56);
  point(x+23, y+11);
  col(0, 0, 0);
  point(x+23, y+12);
  col(216, 160, 120);
  point(x+23, y+13);
  col(216, 160, 120);
  point(x+23, y+14);
  col(0, 0, 0);
  point(x+23, y+15);
  col(120, 64, 64);
  point(x+23, y+20);
  col(248, 208, 184);
  point(x+23, y+21);
  col(248, 208, 184);
  point(x+23, y+22);
  col(0, 0, 0);
  point(x+23, y+23);
  col(0, 0, 0);
  point(x+24, y+10);
  col(0, 0, 0);
  point(x+24, y+11);
  col(0, 0, 0);
  point(x+24, y+13);
  col(0, 0, 0);
  point(x+24, y+14);
  col(0, 0, 0);
  point(x+24, y+21);
  col(0, 0, 0);
  point(x+24, y+22);
}
void characterFwdTwo(int x, int y) {
  col(0, 0, 0);
  point(x+7, y+10);
  col(0, 0, 0);
  point(x+7, y+11);
  col(0, 0, 0);
  point(x+8, y+8);
  col(0, 0, 0);
  point(x+8, y+9);
  col(104, 72, 56);
  point(x+8, y+10);
  col(104, 72, 56);
  point(x+8, y+11);
  col(0, 0, 0);
  point(x+8, y+12);
  col(0, 0, 0);
  point(x+8, y+13);
  col(0, 0, 0);
  point(x+8, y+14);
  col(0, 0, 0);
  point(x+8, y+20);
  col(0, 0, 0);
  point(x+8, y+21);
  col(0, 0, 0);
  point(x+9, y+7);
  col(152, 104, 88);
  point(x+9, y+8);
  col(104, 72, 56);
  point(x+9, y+9);
  col(104, 72, 56);
  point(x+9, y+10);
  col(104, 72, 56);
  point(x+9, y+11);
  col(48, 40, 40);
  point(x+9, y+12);
  col(216, 160, 120);
  point(x+9, y+13);
  col(216, 160, 120);
  point(x+9, y+14);
  col(0, 0, 0);
  point(x+9, y+15);
  col(120, 64, 64);
  point(x+9, y+19);
  col(248, 208, 184);
  point(x+9, y+20);
  col(248, 208, 184);
  point(x+9, y+21);
  col(0, 0, 0);
  point(x+9, y+22);
  col(48, 40, 40);
  point(x+10, y+6);
  col(152, 104, 88);
  point(x+10, y+7);
  col(152, 104, 88);
  point(x+10, y+8);
  col(104, 72, 56);
  point(x+10, y+9);
  col(104, 72, 56);
  point(x+10, y+10);
  col(104, 72, 56);
  point(x+10, y+11);
  col(104, 72, 56);
  point(x+10, y+12);
  col(48, 40, 40);
  point(x+10, y+13);
  col(120, 64, 64);
  point(x+10, y+14);
  col(120, 64, 64);
  point(x+10, y+15);
  col(0, 0, 0);
  point(x+10, y+16);
  col(0, 0, 0);
  point(x+10, y+18);
  col(248, 208, 184);
  point(x+10, y+19);
  col(216, 160, 120);
  point(x+10, y+20);
  col(248, 208, 184);
  point(x+10, y+21);
  col(0, 0, 0);
  point(x+10, y+22);
  col(48, 40, 40);
  point(x+11, y+5);
  col(152, 104, 88);
  point(x+11, y+6);
  col(152, 104, 88);
  point(x+11, y+7);
  col(152, 104, 88);
  point(x+11, y+8);
  col(152, 104, 88);
  point(x+11, y+9);
  col(104, 72, 56);
  point(x+11, y+10);
  col(104, 72, 56);
  point(x+11, y+11);
  col(104, 72, 56);
  point(x+11, y+12);
  col(48, 40, 40);
  point(x+11, y+13);
  col(248, 208, 184);
  point(x+11, y+14);
  col(248, 208, 184);
  point(x+11, y+15);
  col(216, 160, 120);
  point(x+11, y+16);
  col(120, 64, 64);
  point(x+11, y+17);
  col(0, 0, 0);
  point(x+11, y+18);
  col(88, 160, 216);
  point(x+11, y+19);
  col(88, 160, 216);
  point(x+11, y+20);
  col(56, 104, 176);
  point(x+11, y+21);
  col(0, 0, 0);
  point(x+11, y+22);
  col(0, 0, 0);
  point(x+11, y+23);
  col(0, 0, 0);
  point(x+11, y+24);
  col(48, 40, 40);
  point(x+12, y+5);
  col(152, 104, 88);
  point(x+12, y+6);
  col(152, 104, 88);
  point(x+12, y+7);
  col(152, 104, 88);
  point(x+12, y+8);
  col(104, 72, 56);
  point(x+12, y+9);
  col(152, 104, 88);
  point(x+12, y+10);
  col(48, 40, 40);
  point(x+12, y+11);
  col(48, 40, 40);
  point(x+12, y+12);
  col(248, 208, 184);
  point(x+12, y+13);
  col(248, 208, 184);
  point(x+12, y+14);
  col(248, 208, 184);
  point(x+12, y+15);
  col(232, 232, 248);
  point(x+12, y+16);
  col(120, 64, 64);
  point(x+12, y+17);
  col(99, 173, 242);
  point(x+12, y+18);
  col(99, 173, 242);
  point(x+12, y+19);
  col(99, 173, 242);
  point(x+12, y+20);
  col(0, 0, 0);
  point(x+12, y+21);
  col(72, 104, 176);
  point(x+12, y+22);
  col(56, 104, 176);
  point(x+12, y+23);
  col(88, 160, 216);
  point(x+12, y+24);
  col(0, 0, 0);
  point(x+12, y+25);
  col(48, 40, 40);
  point(x+13, y+4);
  col(104, 72, 56);
  point(x+13, y+5);
  col(104, 72, 56);
  point(x+13, y+6);
  col(152, 104, 88);
  point(x+13, y+7);
  col(152, 104, 88);
  point(x+13, y+8);
  col(152, 104, 88);
  point(x+13, y+9);
  col(152, 104, 88);
  point(x+13, y+10);
  col(104, 72, 56);
  point(x+13, y+11);
  col(48, 40, 40);
  point(x+13, y+12);
  col(248, 208, 184);
  point(x+13, y+13);
  col(248, 208, 184);
  point(x+13, y+14);
  col(232, 232, 248);
  point(x+13, y+15);
  col(232, 232, 248);
  point(x+13, y+16);
  col(216, 160, 120);
  point(x+13, y+17);
  col(120, 64, 64);
  point(x+13, y+18);
  col(88, 160, 216);
  point(x+13, y+19);
  col(88, 160, 216);
  point(x+13, y+20);
  col(88, 160, 216);
  point(x+13, y+21);
  col(56, 104, 176);
  point(x+13, y+22);
  col(72, 104, 176);
  point(x+13, y+23);
  col(88, 160, 216);
  point(x+13, y+24);
  col(0, 0, 0);
  point(x+13, y+25);
  col(48, 40, 40);
  point(x+14, y+4);
  col(104, 72, 56);
  point(x+14, y+5);
  col(104, 72, 56);
  point(x+14, y+6);
  col(104, 72, 56);
  point(x+14, y+7);
  col(152, 104, 88);
  point(x+14, y+8);
  col(152, 104, 88);
  point(x+14, y+9);
  col(152, 104, 88);
  point(x+14, y+10);
  col(104, 72, 56);
  point(x+14, y+11);
  col(48, 40, 40);
  point(x+14, y+12);
  col(248, 208, 184);
  point(x+14, y+13);
  col(248, 208, 184);
  point(x+14, y+14);
  col(152, 152, 160);
  point(x+14, y+15);
  col(0, 0, 0);
  point(x+14, y+16);
  col(248, 208, 184);
  point(x+14, y+17);
  col(248, 208, 184);
  point(x+14, y+18);
  col(0, 0, 0);
  point(x+14, y+19);
  col(56, 104, 176);
  point(x+14, y+20);
  col(88, 160, 216);
  point(x+14, y+21);
  col(88, 160, 216);
  point(x+14, y+22);
  col(72, 104, 176);
  point(x+14, y+23);
  col(0, 0, 0);
  point(x+14, y+24);
  col(0, 0, 0);
  point(x+15, y+4);
  col(104, 72, 56);
  point(x+15, y+5);
  col(104, 72, 56);
  point(x+15, y+6);
  col(104, 72, 56);
  point(x+15, y+7);
  col(104, 72, 56);
  point(x+15, y+8);
  col(104, 72, 56);
  point(x+15, y+9);
  col(152, 104, 88);
  point(x+15, y+10);
  col(152, 104, 88);
  point(x+15, y+11);
  col(48, 40, 40);
  point(x+15, y+12);
  col(248, 208, 184);
  point(x+15, y+13);
  col(248, 208, 184);
  point(x+15, y+14);
  col(248, 208, 184);
  point(x+15, y+15);
  col(152, 152, 160);
  point(x+15, y+16);
  col(248, 208, 184);
  point(x+15, y+17);
  col(248, 208, 184);
  point(x+15, y+18);
  col(216, 160, 120);
  point(x+15, y+19);
  col(232, 232, 248);
  point(x+15, y+20);
  col(56, 104, 176);
  point(x+15, y+21);
  col(88, 160, 216);
  point(x+15, y+22);
  col(48, 40, 40);
  point(x+15, y+23);
  col(0, 0, 0);
  point(x+16, y+4);
  col(104, 72, 56);
  point(x+16, y+5);
  col(104, 72, 56);
  point(x+16, y+6);
  col(104, 72, 56);
  point(x+16, y+7);
  col(104, 72, 56);
  point(x+16, y+8);
  col(104, 72, 56);
  point(x+16, y+9);
  col(152, 104, 88);
  point(x+16, y+10);
  col(48, 40, 40);
  point(x+16, y+11);
  col(248, 208, 184);
  point(x+16, y+12);
  col(248, 208, 184);
  point(x+16, y+13);
  col(248, 208, 184);
  point(x+16, y+14);
  col(248, 208, 184);
  point(x+16, y+15);
  col(248, 208, 184);
  point(x+16, y+16);
  col(248, 208, 184);
  point(x+16, y+17);
  col(216, 160, 120);
  point(x+16, y+18);
  col(216, 160, 120);
  point(x+16, y+19);
  col(232, 232, 248);
  point(x+16, y+20);
  col(99, 173, 242);
  point(x+16, y+21);
  col(88, 160, 216);
  point(x+16, y+22);
  col(48, 40, 40);
  point(x+16, y+23);
  col(0, 0, 0);
  point(x+17, y+4);
  col(104, 72, 56);
  point(x+17, y+5);
  col(104, 72, 56);
  point(x+17, y+6);
  col(104, 72, 56);
  point(x+17, y+7);
  col(104, 72, 56);
  point(x+17, y+8);
  col(104, 72, 56);
  point(x+17, y+9);
  col(104, 72, 56);
  point(x+17, y+10);
  col(48, 40, 40);
  point(x+17, y+11);
  col(248, 208, 184);
  point(x+17, y+12);
  col(248, 208, 184);
  point(x+17, y+13);
  col(248, 208, 184);
  point(x+17, y+14);
  col(248, 208, 184);
  point(x+17, y+15);
  col(152, 152, 160);
  point(x+17, y+16);
  col(248, 208, 184);
  point(x+17, y+17);
  col(248, 208, 184);
  point(x+17, y+18);
  col(216, 160, 120);
  point(x+17, y+19);
  col(232, 232, 248);
  point(x+17, y+20);
  col(56, 104, 176);
  point(x+17, y+21);
  col(88, 160, 216);
  point(x+17, y+22);
  col(48, 40, 40);
  point(x+17, y+23);
  col(0, 0, 0);
  point(x+18, y+5);
  col(104, 72, 56);
  point(x+18, y+6);
  col(104, 72, 56);
  point(x+18, y+7);
  col(104, 72, 56);
  point(x+18, y+8);
  col(104, 72, 56);
  point(x+18, y+9);
  col(48, 40, 40);
  point(x+18, y+10);
  col(48, 40, 40);
  point(x+18, y+11);
  col(248, 208, 184);
  point(x+18, y+12);
  col(248, 208, 184);
  point(x+18, y+13);
  col(248, 208, 184);
  point(x+18, y+14);
  col(152, 152, 160);
  point(x+18, y+15);
  col(0, 0, 0);
  point(x+18, y+16);
  col(248, 208, 184);
  point(x+18, y+17);
  col(248, 208, 184);
  point(x+18, y+18);
  col(0, 0, 0);
  point(x+18, y+19);
  col(56, 104, 176);
  point(x+18, y+20);
  col(88, 160, 216);
  point(x+18, y+21);
  col(88, 160, 216);
  point(x+18, y+22);
  col(72, 104, 176);
  point(x+18, y+23);
  col(0, 0, 0);
  point(x+18, y+24);
  col(0, 0, 0);
  point(x+19, y+5);
  col(48, 40, 40);
  point(x+19, y+6);
  col(104, 72, 56);
  point(x+19, y+7);
  col(104, 72, 56);
  point(x+19, y+8);
  col(104, 72, 56);
  point(x+19, y+9);
  col(104, 72, 56);
  point(x+19, y+10);
  col(104, 72, 56);
  point(x+19, y+11);
  col(48, 40, 40);
  point(x+19, y+12);
  col(248, 208, 184);
  point(x+19, y+13);
  col(248, 208, 184);
  point(x+19, y+14);
  col(232, 232, 248);
  point(x+19, y+15);
  col(232, 232, 248);
  point(x+19, y+16);
  col(216, 160, 120);
  point(x+19, y+17);
  col(120, 64, 64);
  point(x+19, y+18);
  col(88, 160, 216);
  point(x+19, y+19);
  col(88, 160, 216);
  point(x+19, y+20);
  col(88, 160, 216);
  point(x+19, y+21);
  col(56, 104, 176);
  point(x+19, y+22);
  col(72, 104, 176);
  point(x+19, y+23);
  col(88, 160, 216);
  point(x+19, y+24);
  col(0, 0, 0);
  point(x+19, y+25);
  col(0, 0, 0);
  point(x+20, y+6);
  col(48, 40, 40);
  point(x+20, y+7);
  col(104, 72, 56);
  point(x+20, y+8);
  col(104, 72, 56);
  point(x+20, y+9);
  col(104, 72, 56);
  point(x+20, y+10);
  col(104, 72, 56);
  point(x+20, y+11);
  col(104, 72, 56);
  point(x+20, y+12);
  col(248, 208, 184);
  point(x+20, y+13);
  col(248, 208, 184);
  point(x+20, y+14);
  col(248, 208, 184);
  point(x+20, y+15);
  col(232, 232, 248);
  point(x+20, y+16);
  col(120, 64, 64);
  point(x+20, y+17);
  col(99, 173, 242);
  point(x+20, y+18);
  col(99, 173, 242);
  point(x+20, y+19);
  col(99, 173, 242);
  point(x+20, y+20);
  col(0, 0, 0);
  point(x+20, y+21);
  col(72, 104, 176);
  point(x+20, y+22);
  col(56, 104, 176);
  point(x+20, y+23);
  col(88, 160, 216);
  point(x+20, y+24);
  col(0, 0, 0);
  point(x+20, y+25);
  col(0, 0, 0);
  point(x+21, y+6);
  col(104, 72, 56);
  point(x+21, y+7);
  col(104, 72, 56);
  point(x+21, y+8);
  col(104, 72, 56);
  point(x+21, y+9);
  col(104, 72, 56);
  point(x+21, y+10);
  col(48, 40, 40);
  point(x+21, y+11);
  col(104, 72, 56);
  point(x+21, y+12);
  col(48, 40, 40);
  point(x+21, y+13);
  col(248, 208, 184);
  point(x+21, y+14);
  col(248, 208, 184);
  point(x+21, y+15);
  col(216, 160, 120);
  point(x+21, y+16);
  col(120, 64, 64);
  point(x+21, y+17);
  col(0, 0, 0);
  point(x+21, y+18);
  col(88, 160, 216);
  point(x+21, y+19);
  col(88, 160, 216);
  point(x+21, y+20);
  col(56, 104, 176);
  point(x+21, y+21);
  col(0, 0, 0);
  point(x+21, y+22);
  col(0, 0, 0);
  point(x+21, y+23);
  col(0, 0, 0);
  point(x+21, y+24);
  col(0, 0, 0);
  point(x+22, y+7);
  col(104, 72, 56);
  point(x+22, y+8);
  col(104, 72, 56);
  point(x+22, y+9);
  col(104, 72, 56);
  point(x+22, y+10);
  col(104, 72, 56);
  point(x+22, y+11);
  col(48, 40, 40);
  point(x+22, y+12);
  col(0, 0, 0);
  point(x+22, y+13);
  col(120, 64, 64);
  point(x+22, y+14);
  col(120, 64, 64);
  point(x+22, y+15);
  col(0, 0, 0);
  point(x+22, y+16);
  col(0, 0, 0);
  point(x+22, y+18);
  col(248, 208, 184);
  point(x+22, y+19);
  col(216, 160, 120);
  point(x+22, y+20);
  col(248, 208, 184);
  point(x+22, y+21);
  col(0, 0, 0);
  point(x+22, y+22);
  col(0, 0, 0);
  point(x+23, y+8);
  col(0, 0, 0);
  point(x+23, y+9);
  col(104, 72, 56);
  point(x+23, y+10);
  col(104, 72, 56);
  point(x+23, y+11);
  col(0, 0, 0);
  point(x+23, y+12);
  col(216, 160, 120);
  point(x+23, y+13);
  col(216, 160, 120);
  point(x+23, y+14);
  col(0, 0, 0);
  point(x+23, y+15);
  col(120, 64, 64);
  point(x+23, y+19);
  col(248, 208, 184);
  point(x+23, y+20);
  col(248, 208, 184);
  point(x+23, y+21);
  col(0, 0, 0);
  point(x+23, y+22);
  col(0, 0, 0);
  point(x+24, y+10);
  col(0, 0, 0);
  point(x+24, y+11);
  col(0, 0, 0);
  point(x+24, y+13);
  col(0, 0, 0);
  point(x+24, y+14);
  col(0, 0, 0);
  point(x+24, y+20);
  col(0, 0, 0);
  point(x+24, y+21);
}
void col(int c) {
  fill(c);
  stroke(c);
}
void col(int r, int g, int b) {
  fill(r, g, b);
  stroke(r, g, b);
}
