int h=0, s=100, b=100;
int colourSquareX=400, colourSquareY=150;
color characterHairOne=color(152, 104, 88);
color characterHairTwo=color(104, 72, 56);
color characterPantsOne=color(99, 173, 242);
color characterPantsTwo=color(72, 104, 176);
color characterPantsThree=color(56, 104, 176);
boolean chosenHair=true;
void setup() {
  size(800, 500);

  stroke(200);
  fill(200);
  rect(colourSquareX, colourSquareY, 255, 255);
  colorMode(HSB);
  drawColourSquare();
}
void draw() {
  //This is to provide the redrawing a solid background when it draws over the pointer
  stroke(200);
  fill(200);
  rect(colourSquareX+max(s-3, -3), colourSquareY+255-max(b-3, -3), min(6, s+3), -1*min(6, b+3));

  //This is to match the pixels that the pointer was on
  colorMode(HSB);
  for (int i=max(s-3, 0); i<=min(s+3, 255); i++) {
    for (int j=max(b-3, 0); j<=min(b+3, 255); j++) {
      stroke(h, i, j);
      point(i+colourSquareX, 255+colourSquareY-j);
    }
  }
  stroke(100, 100, 200);
  fill(100, 100, 200);
  rect(450, 90, 200, 50);
  rect(450, 15, 200, 50);
  if (mousePressed) {
    if (mouseX<=650&&mouseX>=450&&mouseY<=65&&mouseY>=15) {
      h=(int)hue(characterHairOne);
      s=(int)saturation(characterHairOne);
      b=(int)brightness(characterHairOne);
      chosenHair=true;
      drawColourSquare();
      colorMode(RGB);
      stroke(200);
      fill(200);
      rect(colourSquareX, colourSquareY, 255, 255);
      colorMode(HSB);
      drawColourSquare();
    } else if (mouseX<=650&&mouseX>=450&&mouseY<=140&&mouseY>=90) {
      h=(int)hue(characterPantsOne);
      s=(int)saturation(characterPantsOne);
      b=(int)brightness(characterPantsOne);
      chosenHair=false;
      colorMode(RGB);
      stroke(200);
      fill(200);
      rect(colourSquareX, colourSquareY, 255, 255);
      colorMode(HSB);
      drawColourSquare();
    }
  }
  
  if (chosenHair) {
    characterHairOne=color(h, s, b);
    characterHairTwo=color(h, s, b*.9);
    stroke(150, 255, 255);
    fill(150, 255, 255);
    rect(450, 15, 200, 50);
  } else {
    characterPantsOne=color(h, s, b);
    characterPantsTwo=color(h, s, b*.65);
    characterPantsThree=color(h, s, b*.6);
    stroke(150, 255, 255);
    fill(150, 255, 255);
    rect(450, 90, 200, 50);
  }
  fill(200, 100, 100);
  textSize(48);
  text("Hair", 450, 65);
  text("Pants", 450, 140);
  println(mouseX+" "+mouseY);
  colorMode(RGB);
  characterFwdIdle();

  colorMode(HSB);
  //Coords of the colour square (300,100) (555,355)
  for (int i=0; i<256; i++) {
    stroke(i, 255, 255);
    line(colourSquareX+300, i+colourSquareY, colourSquareX+325, i+colourSquareY);
  }
  //Coords of the side scale  (600,100) (625,355)
  if (mousePressed) {
    if (mouseX<=colourSquareX+255&&mouseX>=colourSquareX&&mouseY<=colourSquareY+255&&mouseY>=colourSquareY) {  //The square
      s=mouseX-colourSquareX;
      b=255-mouseY+colourSquareY;
    } else if (mouseX<=colourSquareX+325&&mouseX>=colourSquareX+300&&mouseY<=colourSquareY+255&&mouseY>=colourSquareY) {  //The slide
      h=mouseY-colourSquareY;

      //To redraw a neutral background
      colorMode(RGB);
      stroke(200);
      fill(200);
      rect(colourSquareX, colourSquareY, 255, 255);

      //Redraw square
      colorMode(HSB);
      drawColourSquare();
    }
  }

  //Draws the pointer to where the mouse is
  colorMode(RGB);
  stroke(255);
  fill(255);
  line(colourSquareX+300, h+colourSquareY, colourSquareX+325, h+colourSquareY);
  ellipse(s+colourSquareX, colourSquareY+255-b, 5, 5);
}
void drawColourSquare() {
  for (int i=0; i<256; i++) {
    for (int j=0; j<256; j++) {
      stroke(h, j, 255-i);
      point(j+colourSquareX, i+colourSquareY);
    }
  }
}
void characterFwdIdle() {
  col(0, 0, 0);
  rect(70, 100, 9, 9);
  col(0, 0, 0);
  rect(70, 110, 9, 9);
  col(0, 0, 0);
  rect(80, 80, 9, 9);
  col(0, 0, 0);
  rect(80, 90, 9, 9);
  col(characterHairTwo);
  rect(80, 100, 9, 9);
  col(characterHairTwo);
  rect(80, 110, 9, 9);
  col(0, 0, 0);
  rect(80, 120, 9, 9);
  col(0, 0, 0);
  rect(80, 130, 9, 9);
  col(0, 0, 0);
  rect(80, 140, 9, 9);
  col(0, 0, 0);
  rect(80, 210, 9, 9);
  col(0, 0, 0);
  rect(80, 220, 9, 9);
  col(0, 0, 0);
  rect(90, 70, 9, 9);
  col(characterHairTwo);
  rect(90, 80, 9, 9);
  col(characterHairTwo);
  rect(90, 90, 9, 9);
  col(characterHairTwo);
  rect(90, 100, 9, 9);
  col(characterHairTwo);
  rect(90, 110, 9, 9);
  col(48, 40, 40);
  rect(90, 120, 9, 9);
  col(216, 160, 120);
  rect(90, 130, 9, 9);
  col(216, 160, 120);
  rect(90, 140, 9, 9);
  col(0, 0, 0);
  rect(90, 150, 9, 9);
  col(120, 64, 64);
  rect(90, 200, 9, 9);
  col(248, 208, 184);
  rect(90, 210, 9, 9);
  col(248, 208, 184);
  rect(90, 220, 9, 9);
  col(0, 0, 0);
  rect(90, 230, 9, 9);
  col(48, 40, 40);
  rect(100, 60, 9, 9);
  col(characterHairOne);
  rect(100, 70, 9, 9);
  col(characterHairOne);
  rect(100, 80, 9, 9);
  col(characterHairTwo);
  rect(100, 90, 9, 9);
  col(characterHairTwo);
  rect(100, 100, 9, 9);
  col(48, 40, 40);
  rect(100, 110, 9, 9);
  col(characterHairTwo);
  rect(100, 120, 9, 9);
  col(48, 40, 40);
  rect(100, 130, 9, 9);
  col(120, 64, 64);
  rect(100, 140, 9, 9);
  col(120, 64, 64);
  rect(100, 150, 9, 9);
  col(0, 0, 0);
  rect(100, 160, 9, 9);
  col(0, 0, 0);
  rect(100, 190, 9, 9);
  col(248, 208, 184);
  rect(100, 200, 9, 9);
  col(216, 160, 120);
  rect(100, 210, 9, 9);
  col(248, 208, 184);
  rect(100, 220, 9, 9);
  col(0, 0, 0);
  rect(100, 230, 9, 9);
  col(48, 40, 40);
  rect(110, 50, 9, 9);
  col(characterHairOne);
  rect(110, 60, 9, 9);
  col(characterHairOne);
  rect(110, 70, 9, 9);
  col(characterHairOne);
  rect(110, 80, 9, 9);
  col(characterHairOne);
  rect(110, 90, 9, 9);
  col(characterHairTwo);
  rect(110, 100, 9, 9);
  col(characterHairTwo);
  rect(110, 110, 9, 9);
  col(characterHairTwo);
  rect(110, 120, 9, 9);
  col(48, 40, 40);
  rect(110, 130, 9, 9);
  col(248, 208, 184);
  rect(110, 140, 9, 9);
  col(248, 208, 184);
  rect(110, 150, 9, 9);
  col(216, 160, 120);
  rect(110, 160, 9, 9);
  col(120, 64, 64);
  rect(110, 170, 9, 9);
  col(0, 0, 0);
  rect(110, 180, 9, 9);
  col(characterPantsOne);
  rect(110, 190, 9, 9);
  col(characterPantsOne);
  rect(110, 200, 9, 9);
  col(characterPantsThree);
  rect(110, 210, 9, 9);
  col(0, 0, 0);
  rect(110, 220, 9, 9);
  col(0, 0, 0);
  rect(110, 230, 9, 9);
  col(0, 0, 0);
  rect(110, 240, 9, 9);
  col(0, 0, 0);
  rect(110, 250, 9, 9);
  col(48, 40, 40);
  rect(120, 50, 9, 9);
  col(characterHairOne);
  rect(120, 60, 9, 9);
  col(characterHairOne);
  rect(120, 70, 9, 9);
  col(characterHairOne);
  rect(120, 80, 9, 9);
  col(characterHairTwo);
  rect(120, 90, 9, 9);
  col(characterHairOne);
  rect(120, 100, 9, 9);
  col(characterHairTwo);
  rect(120, 110, 9, 9);
  col(48, 40, 40);
  rect(120, 120, 9, 9);
  col(248, 208, 184);
  rect(120, 130, 9, 9);
  col(248, 208, 184);
  rect(120, 140, 9, 9);
  col(248, 208, 184);
  rect(120, 150, 9, 9);
  col(152, 152, 160);
  rect(120, 160, 9, 9);
  col(248, 208, 184);
  rect(120, 170, 9, 9);
  col(120, 64, 64);
  rect(120, 180, 9, 9);
  col(characterPantsOne);
  rect(120, 190, 9, 9);
  col(characterPantsOne);
  rect(120, 200, 9, 9);
  col(0, 0, 0);
  rect(120, 210, 9, 9);
  col(0, 0, 0);
  rect(120, 220, 9, 9);
  col(characterPantsTwo);
  rect(120, 230, 9, 9);
  col(characterPantsThree);
  rect(120, 240, 9, 9);
  col(characterPantsOne);
  rect(120, 250, 9, 9);
  col(0, 0, 0);
  rect(120, 260, 9, 9);
  col(48, 40, 40);
  rect(130, 40, 9, 9);
  col(characterHairOne);
  rect(130, 50, 9, 9);
  col(characterHairTwo);
  rect(130, 60, 9, 9);
  col(characterHairOne);
  rect(130, 70, 9, 9);
  col(characterHairOne);
  rect(130, 80, 9, 9);
  col(characterHairOne);
  rect(130, 90, 9, 9);
  col(characterHairOne);
  rect(130, 100, 9, 9);
  col(characterHairTwo);
  rect(130, 110, 9, 9);
  col(48, 40, 40);
  rect(130, 120, 9, 9);
  col(248, 208, 184);
  rect(130, 130, 9, 9);
  col(248, 208, 184);
  rect(130, 140, 9, 9);
  col(232, 232, 248);
  rect(130, 150, 9, 9);
  col(232, 232, 248);
  rect(130, 160, 9, 9);
  col(248, 208, 184);
  rect(130, 170, 9, 9);
  col(216, 160, 120);
  rect(130, 180, 9, 9);
  col(0, 0, 0);
  rect(130, 190, 9, 9);
  col(characterPantsOne);
  rect(130, 200, 9, 9);
  col(characterPantsOne);
  rect(130, 210, 9, 9);
  col(characterPantsOne);
  rect(130, 220, 9, 9);
  col(characterPantsThree);
  rect(130, 230, 9, 9);
  col(characterPantsTwo);
  rect(130, 240, 9, 9);
  col(characterPantsOne);
  rect(130, 250, 9, 9);
  col(0, 0, 0);
  rect(130, 260, 9, 9);
  col(48, 40, 40);
  rect(140, 40, 9, 9);
  col(characterHairTwo);
  rect(140, 50, 9, 9);
  col(characterHairTwo);
  rect(140, 60, 9, 9);
  col(characterHairTwo);
  rect(140, 70, 9, 9);
  col(characterHairOne);
  rect(140, 80, 9, 9);
  col(characterHairOne);
  rect(140, 90, 9, 9);
  col(characterHairTwo);
  rect(140, 100, 9, 9);
  col(characterHairTwo);
  rect(140, 110, 9, 9);
  col(48, 40, 40);
  rect(140, 120, 9, 9);
  col(248, 208, 184);
  rect(140, 130, 9, 9);
  col(248, 208, 184);
  rect(140, 140, 9, 9);
  col(152, 152, 160);
  rect(140, 150, 9, 9);
  col(0, 0, 0);
  rect(140, 160, 9, 9);
  col(248, 208, 184);
  rect(140, 170, 9, 9);
  col(248, 208, 184);
  rect(140, 180, 9, 9);
  col(120, 64, 64);
  rect(140, 190, 9, 9);
  col(characterPantsThree);
  rect(140, 200, 9, 9);
  col(characterPantsOne);
  rect(140, 210, 9, 9);
  col(characterPantsOne);
  rect(140, 220, 9, 9);
  col(characterPantsOne);
  rect(140, 230, 9, 9);
  col(characterPantsTwo);
  rect(140, 240, 9, 9);
  col(0, 0, 0);
  rect(140, 250, 9, 9);
  col(0, 0, 0);
  rect(150, 40, 9, 9);
  col(characterHairTwo);
  rect(150, 50, 9, 9);
  col(characterHairTwo);
  rect(150, 60, 9, 9);
  col(characterHairTwo);
  rect(150, 70, 9, 9);
  col(characterHairOne);
  rect(150, 80, 9, 9);
  col(characterHairOne);
  rect(150, 90, 9, 9);
  col(characterHairTwo);
  rect(150, 100, 9, 9);
  col(characterHairTwo);
  rect(150, 110, 9, 9);
  col(48, 40, 40);
  rect(150, 120, 9, 9);
  col(248, 208, 184);
  rect(150, 130, 9, 9);
  col(248, 208, 184);
  rect(150, 140, 9, 9);
  col(248, 208, 184);
  rect(150, 150, 9, 9);
  col(152, 152, 160);
  rect(150, 160, 9, 9);
  col(248, 208, 184);
  rect(150, 170, 9, 9);
  col(248, 208, 184);
  rect(150, 180, 9, 9);
  col(216, 160, 120);
  rect(150, 190, 9, 9);
  col(232, 232, 248);
  rect(150, 200, 9, 9);
  col(characterPantsThree);
  rect(150, 210, 9, 9);
  col(characterPantsOne);
  rect(150, 220, 9, 9);
  col(characterPantsOne);
  rect(150, 230, 9, 9);
  col(48, 40, 40);
  rect(150, 240, 9, 9);
  col(0, 0, 0);
  rect(160, 40, 9, 9);
  col(characterHairTwo);
  rect(160, 50, 9, 9);
  col(characterHairTwo);
  rect(160, 60, 9, 9);
  col(characterHairTwo);
  rect(160, 70, 9, 9);
  col(characterHairTwo);
  rect(160, 80, 9, 9);
  col(characterHairTwo);
  rect(160, 90, 9, 9);
  col(characterHairOne);
  rect(160, 100, 9, 9);
  col(48, 40, 40);
  rect(160, 110, 9, 9);
  col(248, 208, 184);
  rect(160, 120, 9, 9);
  col(248, 208, 184);
  rect(160, 130, 9, 9);
  col(248, 208, 184);
  rect(160, 140, 9, 9);
  col(248, 208, 184);
  rect(160, 150, 9, 9);
  col(248, 208, 184);
  rect(160, 160, 9, 9);
  col(248, 208, 184);
  rect(160, 170, 9, 9);
  col(216, 160, 120);
  rect(160, 180, 9, 9);
  col(216, 160, 120);
  rect(160, 190, 9, 9);
  col(232, 232, 248);
  rect(160, 200, 9, 9);
  col(characterPantsOne);
  rect(160, 210, 9, 9);
  col(characterPantsThree);
  rect(160, 220, 9, 9);
  col(characterPantsOne);
  rect(160, 230, 9, 9);
  col(48, 40, 40);
  rect(160, 240, 9, 9);
  col(0, 0, 0);
  rect(170, 40, 9, 9);
  col(characterHairTwo);
  rect(170, 50, 9, 9);
  col(characterHairTwo);
  rect(170, 60, 9, 9);
  col(characterHairTwo);
  rect(170, 70, 9, 9);
  col(characterHairTwo);
  rect(170, 80, 9, 9);
  col(characterHairOne);
  rect(170, 90, 9, 9);
  col(characterHairTwo);
  rect(170, 100, 9, 9);
  col(48, 40, 40);
  rect(170, 110, 9, 9);
  col(248, 208, 184);
  rect(170, 120, 9, 9);
  col(248, 208, 184);
  rect(170, 130, 9, 9);
  col(248, 208, 184);
  rect(170, 140, 9, 9);
  col(248, 208, 184);
  rect(170, 150, 9, 9);
  col(152, 152, 160);
  rect(170, 160, 9, 9);
  col(248, 208, 184);
  rect(170, 170, 9, 9);
  col(248, 208, 184);
  rect(170, 180, 9, 9);
  col(216, 160, 120);
  rect(170, 190, 9, 9);
  col(232, 232, 248);
  rect(170, 200, 9, 9);
  col(characterPantsThree);
  rect(170, 210, 9, 9);
  col(characterPantsOne);
  rect(170, 220, 9, 9);
  col(characterPantsOne);
  rect(170, 230, 9, 9);
  col(48, 40, 40);
  rect(170, 240, 9, 9);
  col(0, 0, 0);
  rect(180, 50, 9, 9);
  col(characterHairTwo);
  rect(180, 60, 9, 9);
  col(characterHairTwo);
  rect(180, 70, 9, 9);
  col(characterHairTwo);
  rect(180, 80, 9, 9);
  col(characterHairTwo);
  rect(180, 90, 9, 9);
  col(48, 40, 40);
  rect(180, 100, 9, 9);
  col(48, 40, 40);
  rect(180, 110, 9, 9);
  col(248, 208, 184);
  rect(180, 120, 9, 9);
  col(248, 208, 184);
  rect(180, 130, 9, 9);
  col(248, 208, 184);
  rect(180, 140, 9, 9);
  col(152, 152, 160);
  rect(180, 150, 9, 9);
  col(0, 0, 0);
  rect(180, 160, 9, 9);
  col(248, 208, 184);
  rect(180, 170, 9, 9);
  col(248, 208, 184);
  rect(180, 180, 9, 9);
  col(120, 64, 64);
  rect(180, 190, 9, 9);
  col(characterPantsThree);
  rect(180, 200, 9, 9);
  col(characterPantsOne);
  rect(180, 210, 9, 9);
  col(characterPantsOne);
  rect(180, 220, 9, 9);
  col(characterPantsOne);
  rect(180, 230, 9, 9);
  col(characterPantsTwo);
  rect(180, 240, 9, 9);
  col(0, 0, 0);
  rect(180, 250, 9, 9);
  col(0, 0, 0);
  rect(190, 50, 9, 9);
  col(48, 40, 40);
  rect(190, 60, 9, 9);
  col(48, 40, 40);
  rect(190, 70, 9, 9);
  col(characterHairTwo);
  rect(190, 80, 9, 9);
  col(characterHairTwo);
  rect(190, 90, 9, 9);
  col(characterHairTwo);
  rect(190, 100, 9, 9);
  col(characterHairTwo);
  rect(190, 110, 9, 9);
  col(48, 40, 40);
  rect(190, 120, 9, 9);
  col(248, 208, 184);
  rect(190, 130, 9, 9);
  col(248, 208, 184);
  rect(190, 140, 9, 9);
  col(232, 232, 248);
  rect(190, 150, 9, 9);
  col(232, 232, 248);
  rect(190, 160, 9, 9);
  col(248, 208, 184);
  rect(190, 170, 9, 9);
  col(216, 160, 120);
  rect(190, 180, 9, 9);
  col(0, 0, 0);
  rect(190, 190, 9, 9);
  col(characterPantsOne);
  rect(190, 200, 9, 9);
  col(characterPantsOne);
  rect(190, 210, 9, 9);
  col(characterPantsOne);
  rect(190, 220, 9, 9);
  col(characterPantsThree);
  rect(190, 230, 9, 9);
  col(characterPantsTwo);
  rect(190, 240, 9, 9);
  col(characterPantsOne);
  rect(190, 250, 9, 9);
  col(0, 0, 0);
  rect(190, 260, 9, 9);
  col(0, 0, 0);
  rect(200, 60, 9, 9);
  col(characterHairTwo);
  rect(200, 70, 9, 9);
  col(characterHairTwo);
  rect(200, 80, 9, 9);
  col(characterHairTwo);
  rect(200, 90, 9, 9);
  col(characterHairTwo);
  rect(200, 100, 9, 9);
  col(characterHairTwo);
  rect(200, 110, 9, 9);
  col(characterHairTwo);
  rect(200, 120, 9, 9);
  col(248, 208, 184);
  rect(200, 130, 9, 9);
  col(248, 208, 184);
  rect(200, 140, 9, 9);
  col(248, 208, 184);
  rect(200, 150, 9, 9);
  col(152, 152, 160);
  rect(200, 160, 9, 9);
  col(248, 208, 184);
  rect(200, 170, 9, 9);
  col(120, 64, 64);
  rect(200, 180, 9, 9);
  col(characterPantsOne);
  rect(200, 190, 9, 9);
  col(characterPantsOne);
  rect(200, 200, 9, 9);
  col(0, 0, 0);
  rect(200, 210, 9, 9);
  col(0, 0, 0);
  rect(200, 220, 9, 9);
  col(characterPantsTwo);
  rect(200, 230, 9, 9);
  col(characterPantsThree);
  rect(200, 240, 9, 9);
  col(characterPantsOne);
  rect(200, 250, 9, 9);
  col(0, 0, 0);
  rect(200, 260, 9, 9);
  col(0, 0, 0);
  rect(210, 60, 9, 9);
  col(characterHairTwo);
  rect(210, 70, 9, 9);
  col(characterHairTwo);
  rect(210, 80, 9, 9);
  col(characterHairTwo);
  rect(210, 90, 9, 9);
  col(characterHairTwo);
  rect(210, 100, 9, 9);
  col(48, 40, 40);
  rect(210, 110, 9, 9);
  col(characterHairTwo);
  rect(210, 120, 9, 9);
  col(48, 40, 40);
  rect(210, 130, 9, 9);
  col(248, 208, 184);
  rect(210, 140, 9, 9);
  col(248, 208, 184);
  rect(210, 150, 9, 9);
  col(216, 160, 120);
  rect(210, 160, 9, 9);
  col(120, 64, 64);
  rect(210, 170, 9, 9);
  col(0, 0, 0);
  rect(210, 180, 9, 9);
  col(characterPantsOne);
  rect(210, 190, 9, 9);
  col(characterPantsOne);
  rect(210, 200, 9, 9);
  col(characterPantsThree);
  rect(210, 210, 9, 9);
  col(0, 0, 0);
  rect(210, 220, 9, 9);
  col(0, 0, 0);
  rect(210, 230, 9, 9);
  col(0, 0, 0);
  rect(210, 240, 9, 9);
  col(0, 0, 0);
  rect(210, 250, 9, 9);
  col(0, 0, 0);
  rect(220, 70, 9, 9);
  col(characterHairTwo);
  rect(220, 80, 9, 9);
  col(characterHairTwo);
  rect(220, 90, 9, 9);
  col(characterHairTwo);
  rect(220, 100, 9, 9);
  col(characterHairTwo);
  rect(220, 110, 9, 9);
  col(48, 40, 40);
  rect(220, 120, 9, 9);
  col(0, 0, 0);
  rect(220, 130, 9, 9);
  col(120, 64, 64);
  rect(220, 140, 9, 9);
  col(120, 64, 64);
  rect(220, 150, 9, 9);
  col(0, 0, 0);
  rect(220, 160, 9, 9);
  col(0, 0, 0);
  rect(220, 190, 9, 9);
  col(248, 208, 184);
  rect(220, 200, 9, 9);
  col(216, 160, 120);
  rect(220, 210, 9, 9);
  col(248, 208, 184);
  rect(220, 220, 9, 9);
  col(0, 0, 0);
  rect(220, 230, 9, 9);
  col(0, 0, 0);
  rect(230, 80, 9, 9);
  col(0, 0, 0);
  rect(230, 90, 9, 9);
  col(characterHairTwo);
  rect(230, 100, 9, 9);
  col(characterHairTwo);
  rect(230, 110, 9, 9);
  col(0, 0, 0);
  rect(230, 120, 9, 9);
  col(216, 160, 120);
  rect(230, 130, 9, 9);
  col(216, 160, 120);
  rect(230, 140, 9, 9);
  col(0, 0, 0);
  rect(230, 150, 9, 9);
  col(120, 64, 64);
  rect(230, 200, 9, 9);
  col(248, 208, 184);
  rect(230, 210, 9, 9);
  col(248, 208, 184);
  rect(230, 220, 9, 9);
  col(0, 0, 0);
  rect(230, 230, 9, 9);
  col(0, 0, 0);
  rect(240, 100, 9, 9);
  col(0, 0, 0);
  rect(240, 110, 9, 9);
  col(0, 0, 0);
  rect(240, 130, 9, 9);
  col(0, 0, 0);
  rect(240, 140, 9, 9);
  col(0, 0, 0);
  rect(240, 210, 9, 9);
  col(0, 0, 0);
  rect(240, 220, 9, 9);
}
void col(int r, int g, int b) {
  stroke(r, g, b);
  fill(r, g, b);
}
void col(color c) {
  stroke(c);
  fill(c);
}
